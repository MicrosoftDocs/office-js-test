### YamlMime:UniversalReference
items:
  - uid: '@microsoft/office-js.Excel.Functions'
    name: Functions
    fullName: Functions
    children:
      - '@microsoft/office-js.Excel.Functions.abs'
      - '@microsoft/office-js.Excel.Functions.accrInt'
      - '@microsoft/office-js.Excel.Functions.accrIntM'
      - '@microsoft/office-js.Excel.Functions.acos'
      - '@microsoft/office-js.Excel.Functions.acosh'
      - '@microsoft/office-js.Excel.Functions.acot'
      - '@microsoft/office-js.Excel.Functions.acoth'
      - '@microsoft/office-js.Excel.Functions.amorDegrc'
      - '@microsoft/office-js.Excel.Functions.amorLinc'
      - '@microsoft/office-js.Excel.Functions.and'
      - '@microsoft/office-js.Excel.Functions.arabic'
      - '@microsoft/office-js.Excel.Functions.areas'
      - '@microsoft/office-js.Excel.Functions.asc'
      - '@microsoft/office-js.Excel.Functions.asin'
      - '@microsoft/office-js.Excel.Functions.asinh'
      - '@microsoft/office-js.Excel.Functions.atan'
      - '@microsoft/office-js.Excel.Functions.atan2'
      - '@microsoft/office-js.Excel.Functions.atanh'
      - '@microsoft/office-js.Excel.Functions.aveDev'
      - '@microsoft/office-js.Excel.Functions.average'
      - '@microsoft/office-js.Excel.Functions.averageA'
      - '@microsoft/office-js.Excel.Functions.averageIf'
      - '@microsoft/office-js.Excel.Functions.averageIfs'
      - '@microsoft/office-js.Excel.Functions.bahtText'
      - '@microsoft/office-js.Excel.Functions.base'
      - '@microsoft/office-js.Excel.Functions.besselI'
      - '@microsoft/office-js.Excel.Functions.besselJ'
      - '@microsoft/office-js.Excel.Functions.besselK'
      - '@microsoft/office-js.Excel.Functions.besselY'
      - '@microsoft/office-js.Excel.Functions.beta_Dist'
      - '@microsoft/office-js.Excel.Functions.beta_Inv'
      - '@microsoft/office-js.Excel.Functions.bin2Dec'
      - '@microsoft/office-js.Excel.Functions.bin2Hex'
      - '@microsoft/office-js.Excel.Functions.bin2Oct'
      - '@microsoft/office-js.Excel.Functions.binom_Dist'
      - '@microsoft/office-js.Excel.Functions.binom_Dist_Range'
      - '@microsoft/office-js.Excel.Functions.binom_Inv'
      - '@microsoft/office-js.Excel.Functions.bitand'
      - '@microsoft/office-js.Excel.Functions.bitlshift'
      - '@microsoft/office-js.Excel.Functions.bitor'
      - '@microsoft/office-js.Excel.Functions.bitrshift'
      - '@microsoft/office-js.Excel.Functions.bitxor'
      - '@microsoft/office-js.Excel.Functions.ceiling_Math'
      - '@microsoft/office-js.Excel.Functions.ceiling_Precise'
      - '@microsoft/office-js.Excel.Functions.char'
      - '@microsoft/office-js.Excel.Functions.chiSq_Dist'
      - '@microsoft/office-js.Excel.Functions.chiSq_Dist_RT'
      - '@microsoft/office-js.Excel.Functions.chiSq_Inv'
      - '@microsoft/office-js.Excel.Functions.chiSq_Inv_RT'
      - '@microsoft/office-js.Excel.Functions.choose'
      - '@microsoft/office-js.Excel.Functions.clean'
      - '@microsoft/office-js.Excel.Functions.code'
      - '@microsoft/office-js.Excel.Functions.columns'
      - '@microsoft/office-js.Excel.Functions.combin'
      - '@microsoft/office-js.Excel.Functions.combina'
      - '@microsoft/office-js.Excel.Functions.complex'
      - '@microsoft/office-js.Excel.Functions.concatenate'
      - '@microsoft/office-js.Excel.Functions.confidence_Norm'
      - '@microsoft/office-js.Excel.Functions.confidence_T'
      - '@microsoft/office-js.Excel.Functions.convert'
      - '@microsoft/office-js.Excel.Functions.cos'
      - '@microsoft/office-js.Excel.Functions.cosh'
      - '@microsoft/office-js.Excel.Functions.cot'
      - '@microsoft/office-js.Excel.Functions.coth'
      - '@microsoft/office-js.Excel.Functions.count'
      - '@microsoft/office-js.Excel.Functions.countA'
      - '@microsoft/office-js.Excel.Functions.countBlank'
      - '@microsoft/office-js.Excel.Functions.countIf'
      - '@microsoft/office-js.Excel.Functions.countIfs'
      - '@microsoft/office-js.Excel.Functions.coupDayBs'
      - '@microsoft/office-js.Excel.Functions.coupDays'
      - '@microsoft/office-js.Excel.Functions.coupDaysNc'
      - '@microsoft/office-js.Excel.Functions.coupNcd'
      - '@microsoft/office-js.Excel.Functions.coupNum'
      - '@microsoft/office-js.Excel.Functions.coupPcd'
      - '@microsoft/office-js.Excel.Functions.csc'
      - '@microsoft/office-js.Excel.Functions.csch'
      - '@microsoft/office-js.Excel.Functions.cumIPmt'
      - '@microsoft/office-js.Excel.Functions.cumPrinc'
      - '@microsoft/office-js.Excel.Functions.date'
      - '@microsoft/office-js.Excel.Functions.datevalue'
      - '@microsoft/office-js.Excel.Functions.daverage'
      - '@microsoft/office-js.Excel.Functions.day'
      - '@microsoft/office-js.Excel.Functions.days'
      - '@microsoft/office-js.Excel.Functions.days360'
      - '@microsoft/office-js.Excel.Functions.db'
      - '@microsoft/office-js.Excel.Functions.dbcs'
      - '@microsoft/office-js.Excel.Functions.dcount'
      - '@microsoft/office-js.Excel.Functions.dcountA'
      - '@microsoft/office-js.Excel.Functions.ddb'
      - '@microsoft/office-js.Excel.Functions.dec2Bin'
      - '@microsoft/office-js.Excel.Functions.dec2Hex'
      - '@microsoft/office-js.Excel.Functions.dec2Oct'
      - '@microsoft/office-js.Excel.Functions.decimal'
      - '@microsoft/office-js.Excel.Functions.degrees'
      - '@microsoft/office-js.Excel.Functions.delta'
      - '@microsoft/office-js.Excel.Functions.devSq'
      - '@microsoft/office-js.Excel.Functions.dget'
      - '@microsoft/office-js.Excel.Functions.disc'
      - '@microsoft/office-js.Excel.Functions.dmax'
      - '@microsoft/office-js.Excel.Functions.dmin'
      - '@microsoft/office-js.Excel.Functions.dollar'
      - '@microsoft/office-js.Excel.Functions.dollarDe'
      - '@microsoft/office-js.Excel.Functions.dollarFr'
      - '@microsoft/office-js.Excel.Functions.dproduct'
      - '@microsoft/office-js.Excel.Functions.dstDev'
      - '@microsoft/office-js.Excel.Functions.dstDevP'
      - '@microsoft/office-js.Excel.Functions.dsum'
      - '@microsoft/office-js.Excel.Functions.duration'
      - '@microsoft/office-js.Excel.Functions.dvar'
      - '@microsoft/office-js.Excel.Functions.dvarP'
      - '@microsoft/office-js.Excel.Functions.ecma_Ceiling'
      - '@microsoft/office-js.Excel.Functions.edate'
      - '@microsoft/office-js.Excel.Functions.effect'
      - '@microsoft/office-js.Excel.Functions.eoMonth'
      - '@microsoft/office-js.Excel.Functions.erf'
      - '@microsoft/office-js.Excel.Functions.erfC'
      - '@microsoft/office-js.Excel.Functions.erfC_Precise'
      - '@microsoft/office-js.Excel.Functions.erf_Precise'
      - '@microsoft/office-js.Excel.Functions.error_Type'
      - '@microsoft/office-js.Excel.Functions.even'
      - '@microsoft/office-js.Excel.Functions.exact'
      - '@microsoft/office-js.Excel.Functions.exp'
      - '@microsoft/office-js.Excel.Functions.expon_Dist'
      - '@microsoft/office-js.Excel.Functions.fact'
      - '@microsoft/office-js.Excel.Functions.factDouble'
      - '@microsoft/office-js.Excel.Functions.false'
      - '@microsoft/office-js.Excel.Functions.find'
      - '@microsoft/office-js.Excel.Functions.findB'
      - '@microsoft/office-js.Excel.Functions.fisher'
      - '@microsoft/office-js.Excel.Functions.fisherInv'
      - '@microsoft/office-js.Excel.Functions.fixed'
      - '@microsoft/office-js.Excel.Functions.floor_Math'
      - '@microsoft/office-js.Excel.Functions.floor_Precise'
      - '@microsoft/office-js.Excel.Functions.fv'
      - '@microsoft/office-js.Excel.Functions.fvschedule'
      - '@microsoft/office-js.Excel.Functions.f_Dist'
      - '@microsoft/office-js.Excel.Functions.f_Dist_RT'
      - '@microsoft/office-js.Excel.Functions.f_Inv'
      - '@microsoft/office-js.Excel.Functions.f_Inv_RT'
      - '@microsoft/office-js.Excel.Functions.gamma'
      - '@microsoft/office-js.Excel.Functions.gammaLn'
      - '@microsoft/office-js.Excel.Functions.gammaLn_Precise'
      - '@microsoft/office-js.Excel.Functions.gamma_Dist'
      - '@microsoft/office-js.Excel.Functions.gamma_Inv'
      - '@microsoft/office-js.Excel.Functions.gauss'
      - '@microsoft/office-js.Excel.Functions.gcd'
      - '@microsoft/office-js.Excel.Functions.geoMean'
      - '@microsoft/office-js.Excel.Functions.geStep'
      - '@microsoft/office-js.Excel.Functions.harMean'
      - '@microsoft/office-js.Excel.Functions.hex2Bin'
      - '@microsoft/office-js.Excel.Functions.hex2Dec'
      - '@microsoft/office-js.Excel.Functions.hex2Oct'
      - '@microsoft/office-js.Excel.Functions.hlookup'
      - '@microsoft/office-js.Excel.Functions.hour'
      - '@microsoft/office-js.Excel.Functions.hyperlink'
      - '@microsoft/office-js.Excel.Functions.hypGeom_Dist'
      - '@microsoft/office-js.Excel.Functions.if'
      - '@microsoft/office-js.Excel.Functions.imAbs'
      - '@microsoft/office-js.Excel.Functions.imaginary'
      - '@microsoft/office-js.Excel.Functions.imArgument'
      - '@microsoft/office-js.Excel.Functions.imConjugate'
      - '@microsoft/office-js.Excel.Functions.imCos'
      - '@microsoft/office-js.Excel.Functions.imCosh'
      - '@microsoft/office-js.Excel.Functions.imCot'
      - '@microsoft/office-js.Excel.Functions.imCsc'
      - '@microsoft/office-js.Excel.Functions.imCsch'
      - '@microsoft/office-js.Excel.Functions.imDiv'
      - '@microsoft/office-js.Excel.Functions.imExp'
      - '@microsoft/office-js.Excel.Functions.imLn'
      - '@microsoft/office-js.Excel.Functions.imLog10'
      - '@microsoft/office-js.Excel.Functions.imLog2'
      - '@microsoft/office-js.Excel.Functions.imPower'
      - '@microsoft/office-js.Excel.Functions.imProduct'
      - '@microsoft/office-js.Excel.Functions.imReal'
      - '@microsoft/office-js.Excel.Functions.imSec'
      - '@microsoft/office-js.Excel.Functions.imSech'
      - '@microsoft/office-js.Excel.Functions.imSin'
      - '@microsoft/office-js.Excel.Functions.imSinh'
      - '@microsoft/office-js.Excel.Functions.imSqrt'
      - '@microsoft/office-js.Excel.Functions.imSub'
      - '@microsoft/office-js.Excel.Functions.imSum'
      - '@microsoft/office-js.Excel.Functions.imTan'
      - '@microsoft/office-js.Excel.Functions.int'
      - '@microsoft/office-js.Excel.Functions.intRate'
      - '@microsoft/office-js.Excel.Functions.ipmt'
      - '@microsoft/office-js.Excel.Functions.irr'
      - '@microsoft/office-js.Excel.Functions.isErr'
      - '@microsoft/office-js.Excel.Functions.isError'
      - '@microsoft/office-js.Excel.Functions.isEven'
      - '@microsoft/office-js.Excel.Functions.isFormula'
      - '@microsoft/office-js.Excel.Functions.isLogical'
      - '@microsoft/office-js.Excel.Functions.isNA'
      - '@microsoft/office-js.Excel.Functions.isNonText'
      - '@microsoft/office-js.Excel.Functions.isNumber'
      - '@microsoft/office-js.Excel.Functions.isOdd'
      - '@microsoft/office-js.Excel.Functions.isoWeekNum'
      - '@microsoft/office-js.Excel.Functions.iso_Ceiling'
      - '@microsoft/office-js.Excel.Functions.ispmt'
      - '@microsoft/office-js.Excel.Functions.isref'
      - '@microsoft/office-js.Excel.Functions.isText'
      - '@microsoft/office-js.Excel.Functions.kurt'
      - '@microsoft/office-js.Excel.Functions.large'
      - '@microsoft/office-js.Excel.Functions.lcm'
      - '@microsoft/office-js.Excel.Functions.left'
      - '@microsoft/office-js.Excel.Functions.leftb'
      - '@microsoft/office-js.Excel.Functions.len'
      - '@microsoft/office-js.Excel.Functions.lenb'
      - '@microsoft/office-js.Excel.Functions.ln'
      - '@microsoft/office-js.Excel.Functions.log'
      - '@microsoft/office-js.Excel.Functions.log10'
      - '@microsoft/office-js.Excel.Functions.logNorm_Dist'
      - '@microsoft/office-js.Excel.Functions.logNorm_Inv'
      - '@microsoft/office-js.Excel.Functions.lookup'
      - '@microsoft/office-js.Excel.Functions.lower'
      - '@microsoft/office-js.Excel.Functions.match'
      - '@microsoft/office-js.Excel.Functions.max'
      - '@microsoft/office-js.Excel.Functions.maxA'
      - '@microsoft/office-js.Excel.Functions.mduration'
      - '@microsoft/office-js.Excel.Functions.median'
      - '@microsoft/office-js.Excel.Functions.mid'
      - '@microsoft/office-js.Excel.Functions.midb'
      - '@microsoft/office-js.Excel.Functions.min'
      - '@microsoft/office-js.Excel.Functions.minA'
      - '@microsoft/office-js.Excel.Functions.minute'
      - '@microsoft/office-js.Excel.Functions.mirr'
      - '@microsoft/office-js.Excel.Functions.mod'
      - '@microsoft/office-js.Excel.Functions.month'
      - '@microsoft/office-js.Excel.Functions.mround'
      - '@microsoft/office-js.Excel.Functions.multiNomial'
      - '@microsoft/office-js.Excel.Functions.n'
      - '@microsoft/office-js.Excel.Functions.na'
      - '@microsoft/office-js.Excel.Functions.negBinom_Dist'
      - '@microsoft/office-js.Excel.Functions.networkDays'
      - '@microsoft/office-js.Excel.Functions.networkDays_Intl'
      - '@microsoft/office-js.Excel.Functions.nominal'
      - '@microsoft/office-js.Excel.Functions.norm_Dist'
      - '@microsoft/office-js.Excel.Functions.norm_Inv'
      - '@microsoft/office-js.Excel.Functions.norm_S_Dist'
      - '@microsoft/office-js.Excel.Functions.norm_S_Inv'
      - '@microsoft/office-js.Excel.Functions.not'
      - '@microsoft/office-js.Excel.Functions.now'
      - '@microsoft/office-js.Excel.Functions.nper'
      - '@microsoft/office-js.Excel.Functions.npv'
      - '@microsoft/office-js.Excel.Functions.numberValue'
      - '@microsoft/office-js.Excel.Functions.oct2Bin'
      - '@microsoft/office-js.Excel.Functions.oct2Dec'
      - '@microsoft/office-js.Excel.Functions.oct2Hex'
      - '@microsoft/office-js.Excel.Functions.odd'
      - '@microsoft/office-js.Excel.Functions.oddFPrice'
      - '@microsoft/office-js.Excel.Functions.oddFYield'
      - '@microsoft/office-js.Excel.Functions.oddLPrice'
      - '@microsoft/office-js.Excel.Functions.oddLYield'
      - '@microsoft/office-js.Excel.Functions.or'
      - '@microsoft/office-js.Excel.Functions.pduration'
      - '@microsoft/office-js.Excel.Functions.percentile_Exc'
      - '@microsoft/office-js.Excel.Functions.percentile_Inc'
      - '@microsoft/office-js.Excel.Functions.percentRank_Exc'
      - '@microsoft/office-js.Excel.Functions.percentRank_Inc'
      - '@microsoft/office-js.Excel.Functions.permut'
      - '@microsoft/office-js.Excel.Functions.permutationa'
      - '@microsoft/office-js.Excel.Functions.phi'
      - '@microsoft/office-js.Excel.Functions.pi'
      - '@microsoft/office-js.Excel.Functions.pmt'
      - '@microsoft/office-js.Excel.Functions.poisson_Dist'
      - '@microsoft/office-js.Excel.Functions.power'
      - '@microsoft/office-js.Excel.Functions.ppmt'
      - '@microsoft/office-js.Excel.Functions.price'
      - '@microsoft/office-js.Excel.Functions.priceDisc'
      - '@microsoft/office-js.Excel.Functions.priceMat'
      - '@microsoft/office-js.Excel.Functions.product'
      - '@microsoft/office-js.Excel.Functions.proper'
      - '@microsoft/office-js.Excel.Functions.pv'
      - '@microsoft/office-js.Excel.Functions.quartile_Exc'
      - '@microsoft/office-js.Excel.Functions.quartile_Inc'
      - '@microsoft/office-js.Excel.Functions.quotient'
      - '@microsoft/office-js.Excel.Functions.radians'
      - '@microsoft/office-js.Excel.Functions.rand'
      - '@microsoft/office-js.Excel.Functions.randBetween'
      - '@microsoft/office-js.Excel.Functions.rank_Avg'
      - '@microsoft/office-js.Excel.Functions.rank_Eq'
      - '@microsoft/office-js.Excel.Functions.rate'
      - '@microsoft/office-js.Excel.Functions.received'
      - '@microsoft/office-js.Excel.Functions.replace'
      - '@microsoft/office-js.Excel.Functions.replaceB'
      - '@microsoft/office-js.Excel.Functions.rept'
      - '@microsoft/office-js.Excel.Functions.right'
      - '@microsoft/office-js.Excel.Functions.rightb'
      - '@microsoft/office-js.Excel.Functions.roman'
      - '@microsoft/office-js.Excel.Functions.round'
      - '@microsoft/office-js.Excel.Functions.roundDown'
      - '@microsoft/office-js.Excel.Functions.roundUp'
      - '@microsoft/office-js.Excel.Functions.rows'
      - '@microsoft/office-js.Excel.Functions.rri'
      - '@microsoft/office-js.Excel.Functions.sec'
      - '@microsoft/office-js.Excel.Functions.sech'
      - '@microsoft/office-js.Excel.Functions.second'
      - '@microsoft/office-js.Excel.Functions.seriesSum'
      - '@microsoft/office-js.Excel.Functions.sheet'
      - '@microsoft/office-js.Excel.Functions.sheets'
      - '@microsoft/office-js.Excel.Functions.sign'
      - '@microsoft/office-js.Excel.Functions.sin'
      - '@microsoft/office-js.Excel.Functions.sinh'
      - '@microsoft/office-js.Excel.Functions.skew'
      - '@microsoft/office-js.Excel.Functions.skew_p'
      - '@microsoft/office-js.Excel.Functions.sln'
      - '@microsoft/office-js.Excel.Functions.small'
      - '@microsoft/office-js.Excel.Functions.sqrt'
      - '@microsoft/office-js.Excel.Functions.sqrtPi'
      - '@microsoft/office-js.Excel.Functions.standardize'
      - '@microsoft/office-js.Excel.Functions.stDevA'
      - '@microsoft/office-js.Excel.Functions.stDevPA'
      - '@microsoft/office-js.Excel.Functions.stDev_P'
      - '@microsoft/office-js.Excel.Functions.stDev_S'
      - '@microsoft/office-js.Excel.Functions.substitute'
      - '@microsoft/office-js.Excel.Functions.subtotal'
      - '@microsoft/office-js.Excel.Functions.sum'
      - '@microsoft/office-js.Excel.Functions.sumIf'
      - '@microsoft/office-js.Excel.Functions.sumIfs'
      - '@microsoft/office-js.Excel.Functions.sumSq'
      - '@microsoft/office-js.Excel.Functions.syd'
      - '@microsoft/office-js.Excel.Functions.t'
      - '@microsoft/office-js.Excel.Functions.tan'
      - '@microsoft/office-js.Excel.Functions.tanh'
      - '@microsoft/office-js.Excel.Functions.tbillEq'
      - '@microsoft/office-js.Excel.Functions.tbillPrice'
      - '@microsoft/office-js.Excel.Functions.tbillYield'
      - '@microsoft/office-js.Excel.Functions.text'
      - '@microsoft/office-js.Excel.Functions.time'
      - '@microsoft/office-js.Excel.Functions.timevalue'
      - '@microsoft/office-js.Excel.Functions.today'
      - '@microsoft/office-js.Excel.Functions.toJSON'
      - '@microsoft/office-js.Excel.Functions.trim'
      - '@microsoft/office-js.Excel.Functions.trimMean'
      - '@microsoft/office-js.Excel.Functions.true'
      - '@microsoft/office-js.Excel.Functions.trunc'
      - '@microsoft/office-js.Excel.Functions.type'
      - '@microsoft/office-js.Excel.Functions.t_Dist'
      - '@microsoft/office-js.Excel.Functions.t_Dist_2T'
      - '@microsoft/office-js.Excel.Functions.t_Dist_RT'
      - '@microsoft/office-js.Excel.Functions.t_Inv'
      - '@microsoft/office-js.Excel.Functions.t_Inv_2T'
      - '@microsoft/office-js.Excel.Functions.unichar'
      - '@microsoft/office-js.Excel.Functions.unicode'
      - '@microsoft/office-js.Excel.Functions.upper'
      - '@microsoft/office-js.Excel.Functions.usdollar'
      - '@microsoft/office-js.Excel.Functions.value'
      - '@microsoft/office-js.Excel.Functions.varA'
      - '@microsoft/office-js.Excel.Functions.varPA'
      - '@microsoft/office-js.Excel.Functions.var_P'
      - '@microsoft/office-js.Excel.Functions.var_S'
      - '@microsoft/office-js.Excel.Functions.vdb'
      - '@microsoft/office-js.Excel.Functions.vlookup'
      - '@microsoft/office-js.Excel.Functions.weekday'
      - '@microsoft/office-js.Excel.Functions.weekNum'
      - '@microsoft/office-js.Excel.Functions.weibull_Dist'
      - '@microsoft/office-js.Excel.Functions.workDay'
      - '@microsoft/office-js.Excel.Functions.workDay_Intl'
      - '@microsoft/office-js.Excel.Functions.xirr'
      - '@microsoft/office-js.Excel.Functions.xnpv'
      - '@microsoft/office-js.Excel.Functions.xor'
      - '@microsoft/office-js.Excel.Functions.year'
      - '@microsoft/office-js.Excel.Functions.yearFrac'
      - '@microsoft/office-js.Excel.Functions.yield'
      - '@microsoft/office-js.Excel.Functions.yieldDisc'
      - '@microsoft/office-js.Excel.Functions.yieldMat'
      - '@microsoft/office-js.Excel.Functions.z_Test'
    langs:
      - typeScript
    type: class
    summary: |
      An object for evaluating Excel functions.
      [Api set: ExcelApi 1.2]
    extends:
      name: '@@microsoft/office-js.OfficeExtension.ClientObject'
    source:
      path: office.d.ts
      startLine: 9164
      remote:
        path: dist\office.d.ts
        repo: 'https://github.com/OfficeDev/office-js.git'
        branch: master
    package: '@microsoft/office-js'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.abs'
    name: abs
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the absolute value of a number, a number without its sign.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function abs(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the real number for which you want the absolute value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.accrInt'
    name: accrInt
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the accrued interest for a security that pays periodic interest.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function accrInt(issue: number | string | boolean | Range |
        RangeReference | FunctionResult, firstInterest: number | string |
        boolean | Range | RangeReference | FunctionResult, settlement: number |
        string | boolean | Range | RangeReference | FunctionResult, rate: number
        | string | boolean | Range | RangeReference | FunctionResult, par:
        number | string | boolean | Range | RangeReference | FunctionResult,
        frequency: number | string | boolean | Range | RangeReference |
        FunctionResult, basis?: number | string | boolean | Range |
        RangeReference | FunctionResult, calcMethod?: number | string | boolean
        | Range | RangeReference | FunctionResult)
      parameters:
        - id: issue
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s issue date, expressed as a serial date number.'
        - id: firstInterest
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's first interest date, expressed as a serial date
            number.
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual coupon rate.
        - id: par
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's par value.
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the type of day count basis to use.
          optional: true
        - id: calcMethod
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is a logical value: to accrued interest from issue date = TRUE or
            omitted; to calculate from last coupon payment date = FALSE.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.accrIntM'
    name: accrIntM
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the accrued interest for a security that pays interest at
      maturity.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function accrIntM(issue: number | string | boolean | Range |
        RangeReference | FunctionResult, settlement: number | string | boolean |
        Range | RangeReference | FunctionResult, rate: number | string | boolean
        | Range | RangeReference | FunctionResult, par: number | string |
        boolean | Range | RangeReference | FunctionResult, basis?: number |
        string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: issue
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s issue date, expressed as a serial date number.'
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual coupon rate.
        - id: par
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's par value.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.acos'
    name: acos
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the arccosine of a number, in radians in the range 0 to Pi. The
      arccosine is the angle whose cosine is Number.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function acos(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the cosine of the angle you want and must be from -1 to 1.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.acosh'
    name: acosh
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the inverse hyperbolic cosine of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function acosh(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is any real number equal to or greater than 1.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.acot'
    name: acot
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the arccotangent of a number, in radians in the range 0 to Pi.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function acot(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the cotangent of the angle you want.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.acoth'
    name: acoth
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the inverse hyperbolic cotangent of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function acoth(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the hyperbolic cotangent of the angle that you want.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.amorDegrc'
    name: amorDegrc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the prorated linear depreciation of an asset for each accounting
      period.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function amorDegrc(cost: number | string | boolean | Range |
        RangeReference | FunctionResult, datePurchased: number | string |
        boolean | Range | RangeReference | FunctionResult, firstPeriod: number |
        string | boolean | Range | RangeReference | FunctionResult, salvage:
        number | string | boolean | Range | RangeReference | FunctionResult,
        period: number | string | boolean | Range | RangeReference |
        FunctionResult, rate: number | string | boolean | Range | RangeReference
        | FunctionResult, basis?: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: cost
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the cost of the asset.
        - id: datePurchased
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the date the asset is purchased.
        - id: firstPeriod
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the date of the end of the first period.
        - id: salvage
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the salvage value at the end of life of the asset.
        - id: period
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the period.
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the rate of depreciation.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Year_basis : 0 for year of 360 days, 1 for actual, 3 for year of 365
            days.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.amorLinc'
    name: amorLinc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the prorated linear depreciation of an asset for each accounting
      period.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function amorLinc(cost: number | string | boolean | Range |
        RangeReference | FunctionResult, datePurchased: number | string |
        boolean | Range | RangeReference | FunctionResult, firstPeriod: number |
        string | boolean | Range | RangeReference | FunctionResult, salvage:
        number | string | boolean | Range | RangeReference | FunctionResult,
        period: number | string | boolean | Range | RangeReference |
        FunctionResult, rate: number | string | boolean | Range | RangeReference
        | FunctionResult, basis?: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: cost
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the cost of the asset.
        - id: datePurchased
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the date the asset is purchased.
        - id: firstPeriod
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the date of the end of the first period.
        - id: salvage
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the salvage value at the end of life of the asset.
        - id: period
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the period.
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the rate of depreciation.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Year_basis : 0 for year of 360 days, 1 for actual, 3 for year of 365
            days.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.and'
    name: and
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks whether all arguments are TRUE, and returns TRUE if all arguments
      are TRUE.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function and(values: Array<boolean | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<boolean | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 conditions you want
            to test that can be either TRUE or FALSE and can be logical values,
            arrays, or references.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.arabic'
    name: arabic
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a Roman numeral to Arabic.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function arabic(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is the Roman numeral you want to convert.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.areas'
    name: areas
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of areas in a reference. An area is a range of
      contiguous cells or a single cell.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function areas(reference: Range | RangeReference | FunctionResult)'
      parameters:
        - id: reference
          type:
            - Range | RangeReference | FunctionResult
          description: >
            Is a reference to a cell or range of cells and can refer to multiple
            areas.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.asc'
    name: asc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Changes full-width (double-byte) characters to half-width (single-byte)
      characters. Use with double-byte character sets (DBCS).

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function asc(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is a text, or a reference to a cell containing a text.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.asin'
    name: asin
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the arcsine of a number in radians, in the range -Pi/2 to Pi/2.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function asin(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the sine of the angle you want and must be from -1 to 1.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.asinh'
    name: asinh
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the inverse hyperbolic sine of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function asinh(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is any real number equal to or greater than 1.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.atan'
    name: atan
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the arctangent of a number in radians, in the range -Pi/2 to Pi/2.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function atan(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the tangent of the angle you want.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.atan2'
    name: atan2
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the arctangent of the specified x- and y- coordinates, in radians
      between -Pi and Pi, excluding -Pi.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function atan2(xNum: number | Range | RangeReference | FunctionResult,
        yNum: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: xNum
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the x-coordinate of the point.
        - id: yNum
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the y-coordinate of the point.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.atanh'
    name: atanh
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the inverse hyperbolic tangent of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function atanh(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is any real number between -1 and 1 excluding -1 and 1.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.aveDev'
    name: aveDev
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the average of the absolute deviations of data points from their
      mean. Arguments can be numbers or names, arrays, or references that
      contain numbers.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function aveDev(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 arguments for which
            you want the average of the absolute deviations.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.average'
    name: average
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the average (arithmetic mean) of its arguments, which can be
      numbers or names, arrays, or references that contain numbers.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function average(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numeric arguments
            for which you want the average.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.averageA'
    name: averageA
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the average (arithmetic mean) of its arguments, evaluating text
      and FALSE in arguments as 0; TRUE evaluates as 1. Arguments can be
      numbers, names, arrays, or references.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function averageA(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 arguments for which
            you want the average.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.averageIf'
    name: averageIf
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Finds average(arithmetic mean) for the cells specified by a given
      condition or criteria.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function averageIf(range: Range | RangeReference | FunctionResult,
        criteria: number | string | boolean | Range | RangeReference |
        FunctionResult, averageRange?: Range | RangeReference | FunctionResult)
      parameters:
        - id: range
          type:
            - Range | RangeReference | FunctionResult
          description: Is the range of cells you want evaluated.
        - id: criteria
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the condition or criteria in the form of a number, expression, or
            text that defines which cells will be used to find the average.
        - id: averageRange
          type:
            - Range | RangeReference | FunctionResult
          description: >
            Are the actual cells to be used to find the average. If omitted, the
            cells in range are used.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.averageIfs'
    name: averageIfs
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Finds average(arithmetic mean) for the cells specified by a given set of
      conditions or criteria.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function averageIfs(averageRange: Range | RangeReference |
        FunctionResult, values: Array<Range | RangeReference | FunctionResult |
        number | string | boolean>)
      parameters:
        - id: averageRange
          type:
            - Range | RangeReference | FunctionResult
          description: Are the actual cells to be used to find the average.
        - id: values
          type:
            - >-
              Array<Range | RangeReference | FunctionResult | number | string |
              boolean>
          description: >
            List of parameters, where the first element of each pair is the Is
            the range of cells you want evaluated for the particular condition ,
            and the second element is is the condition or criteria in the form
            of a number, expression, or text that defines which cells will be
            used to find the average.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.bahtText'
    name: bahtText
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a number to text (baht).
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function bahtText(number: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is a number that you want to convert.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.base'
    name: base
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a number into a text representation with the given radix (base).
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function base(number: number | Range | RangeReference | FunctionResult,
        radix: number | Range | RangeReference | FunctionResult, minLength?:
        number | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number that you want to convert.
        - id: radix
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the base Radix that you want to convert the number into.
        - id: minLength
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the minimum length of the returned string.  If omitted leading
            zeros are not added.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.besselI'
    name: besselI
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the modified Bessel function In(x).
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function besselI(x: number | string | boolean | Range | RangeReference |
        FunctionResult, n: number | string | boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: x
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the value at which to evaluate the function.
        - id: 'n'
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the order of the Bessel function.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.besselJ'
    name: besselJ
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the Bessel function Jn(x).
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function besselJ(x: number | string | boolean | Range | RangeReference |
        FunctionResult, n: number | string | boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: x
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the value at which to evaluate the function.
        - id: 'n'
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the order of the Bessel function.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.besselK'
    name: besselK
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the modified Bessel function Kn(x).
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function besselK(x: number | string | boolean | Range | RangeReference |
        FunctionResult, n: number | string | boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: x
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the value at which to evaluate the function.
        - id: 'n'
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the order of the function.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.besselY'
    name: besselY
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the Bessel function Yn(x).
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function besselY(x: number | string | boolean | Range | RangeReference |
        FunctionResult, n: number | string | boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: x
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the value at which to evaluate the function.
        - id: 'n'
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the order of the function.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.beta_Dist'
    name: beta_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the beta probability distribution function.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function beta_Dist(x: number | Range | RangeReference | FunctionResult,
        alpha: number | Range | RangeReference | FunctionResult, beta: number |
        Range | RangeReference | FunctionResult, cumulative: boolean | Range |
        RangeReference | FunctionResult, A?: number | Range | RangeReference |
        FunctionResult, B?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value between A and B at which to evaluate the function.
        - id: alpha
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is a parameter to the distribution and must be greater than 0.
        - id: beta
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is a parameter to the distribution and must be greater than 0.
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >-
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability density function, use FALSE.
        - id: A
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is an optional lower bound to the interval of x. If omitted, A = 0.'
          optional: true
        - id: B
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is an optional upper bound to the interval of x. If omitted, B = 1.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.beta_Inv'
    name: beta_Inv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the inverse of the cumulative beta probability density function
      (BETA.DIST).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function beta_Inv(probability: number | Range | RangeReference |
        FunctionResult, alpha: number | Range | RangeReference | FunctionResult,
        beta: number | Range | RangeReference | FunctionResult, A?: number |
        Range | RangeReference | FunctionResult, B?: number | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is a probability associated with the beta distribution.
        - id: alpha
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is a parameter to the distribution and must be greater than 0.
        - id: beta
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is a parameter to the distribution and must be greater than 0.
        - id: A
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is an optional lower bound to the interval of x. If omitted, A = 0.'
          optional: true
        - id: B
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is an optional upper bound to the interval of x. If omitted, B = 1.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.bin2Dec'
    name: bin2Dec
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a binary number to decimal.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function bin2Dec(number: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the binary number you want to convert.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.bin2Hex'
    name: bin2Hex
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a binary number to hexadecimal.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function bin2Hex(number: number | string | boolean | Range |
        RangeReference | FunctionResult, places?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the binary number you want to convert.
        - id: places
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of characters to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.bin2Oct'
    name: bin2Oct
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a binary number to octal.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function bin2Oct(number: number | string | boolean | Range |
        RangeReference | FunctionResult, places?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the binary number you want to convert.
        - id: places
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of characters to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.binom_Dist'
    name: binom_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the individual term binomial distribution probability.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function binom_Dist(numberS: number | Range | RangeReference |
        FunctionResult, trials: number | Range | RangeReference |
        FunctionResult, probabilityS: number | Range | RangeReference |
        FunctionResult, cumulative: boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: numberS
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of successes in trials.
        - id: trials
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of independent trials.
        - id: probabilityS
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the probability of success on each trial.
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability mass function, use FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.binom_Dist_Range'
    name: binom_Dist_Range
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the probability of a trial result using a binomial distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function binom_Dist_Range(trials: number | Range | RangeReference |
        FunctionResult, probabilityS: number | Range | RangeReference |
        FunctionResult, numberS: number | Range | RangeReference |
        FunctionResult, numberS2?: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: trials
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of independent trials.
        - id: probabilityS
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the probability of success on each trial.
        - id: numberS
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of successes in trials.
        - id: numberS2
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            If provided this function returns the probability that the number of
            successful trials shall lie between numberS and numberS2.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.binom_Inv'
    name: binom_Inv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the smallest value for which the cumulative binomial distribution
      is greater than or equal to a criterion value.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function binom_Inv(trials: number | Range | RangeReference |
        FunctionResult, probabilityS: number | Range | RangeReference |
        FunctionResult, alpha: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: trials
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of Bernoulli trials.
        - id: probabilityS
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the probability of success on each trial, a number between 0 and
            1 inclusive.
        - id: alpha
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the criterion value, a number between 0 and 1 inclusive.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.bitand'
    name: bitand
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a bitwise 'And' of two numbers.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function bitand(number1: number | Range | RangeReference |
        FunctionResult, number2: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number1
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
        - id: number2
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the decimal representation of the binary number you want to
            evaluate.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.bitlshift'
    name: bitlshift
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a number shifted left by shift_amount bits.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function bitlshift(number: number | Range | RangeReference |
        FunctionResult, shiftAmount: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
        - id: shiftAmount
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the number of bits that you want to shift Number left by.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.bitor'
    name: bitor
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a bitwise 'Or' of two numbers.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function bitor(number1: number | Range | RangeReference |
        FunctionResult, number2: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number1
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
        - id: number2
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the decimal representation of the binary number you want to
            evaluate.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.bitrshift'
    name: bitrshift
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a number shifted right by shift_amount bits.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function bitrshift(number: number | Range | RangeReference |
        FunctionResult, shiftAmount: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
        - id: shiftAmount
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the number of bits that you want to shift Number right by.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.bitxor'
    name: bitxor
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a bitwise 'Exclusive Or' of two numbers.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function bitxor(number1: number | Range | RangeReference |
        FunctionResult, number2: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number1
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the decimal representation of the binary number you want to
            evaluate.
        - id: number2
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the decimal representation of the binary number you want to
            evaluate.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.ceiling_Math'
    name: ceiling_Math
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Rounds a number up, to the nearest integer or to the nearest multiple of
      significance.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function ceiling_Math(number: number | Range | RangeReference |
        FunctionResult, significance?: number | Range | RangeReference |
        FunctionResult, mode?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value you want to round.
        - id: significance
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the multiple to which you want to round.
          optional: true
        - id: mode
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            When given and nonzero this function will round away from zero.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.ceiling_Precise'
    name: ceiling_Precise
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Rounds a number up, to the nearest integer or to the nearest multiple of
      significance.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function ceiling_Precise(number: number | Range | RangeReference |
        FunctionResult, significance?: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value you want to round.
        - id: significance
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the multiple to which you want to round.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.char'
    name: char
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the character specified by the code number from the character set
      for your computer.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function char(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is a number between 1 and 255 specifying which character you want.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.chiSq_Dist'
    name: chiSq_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the left-tailed probability of the chi-squared distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function chiSq_Dist(x: number | Range | RangeReference | FunctionResult,
        degFreedom: number | Range | RangeReference | FunctionResult,
        cumulative: boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the value at which you want to evaluate the distribution, a
            nonnegative number.
        - id: degFreedom
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the number of degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value for the function to return: the cumulative
            distribution function = TRUE; the probability density function =
            FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.chiSq_Dist_RT'
    name: chiSq_Dist_RT
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the right-tailed probability of the chi-squared distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function chiSq_Dist_RT(x: number | Range | RangeReference |
        FunctionResult, degFreedom: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the value at which you want to evaluate the distribution, a
            nonnegative number.
        - id: degFreedom
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the number of degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.chiSq_Inv'
    name: chiSq_Inv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the inverse of the left-tailed probability of the chi-squared
      distribution.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function chiSq_Inv(probability: number | Range | RangeReference |
        FunctionResult, degFreedom: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a probability associated with the chi-squared distribution, a
            value between 0 and 1 inclusive.
        - id: degFreedom
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the number of degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.chiSq_Inv_RT'
    name: chiSq_Inv_RT
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the inverse of the right-tailed probability of the chi-squared
      distribution.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function chiSq_Inv_RT(probability: number | Range | RangeReference |
        FunctionResult, degFreedom: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a probability associated with the chi-squared distribution, a
            value between 0 and 1 inclusive.
        - id: degFreedom
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the number of degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.choose'
    name: choose
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Chooses a value or action to perform from a list of values, based on an
      index number.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function choose(indexNum: number | Range | RangeReference |
        FunctionResult, values: Array<Range | number | string | boolean |
        RangeReference | FunctionResult>)
      parameters:
        - id: indexNum
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Specifies which value argument is selected. indexNum must be between
            1 and 254, or a formula or a reference to a number between 1 and
            254.
        - id: values
          type:
            - >-
              Array<Range | number | string | boolean | RangeReference |
              FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 254 numbers, cell
            references, defined names, formulas, functions, or text arguments
            from which CHOOSE selects.
      return:
        type:
          - >-
            @@microsoft/office-js.Excel.FunctionResult<number | string |
            boolean>
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.clean'
    name: clean
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Removes all nonprintable characters from text.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function clean(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is any worksheet information from which you want to remove
            nonprintable characters.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.code'
    name: code
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns a numeric code for the first character in a text string, in the
      character set used by your computer.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function code(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is the text for which you want the code of the first character.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.columns'
    name: columns
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the number of columns in an array or reference.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function columns(array: Range | RangeReference | FunctionResult)'
      parameters:
        - id: array
          type:
            - Range | RangeReference | FunctionResult
          description: >
            Is an array or array formula, or a reference to a range of cells for
            which you want the number of columns.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.combin'
    name: combin
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the number of combinations for a given number of items.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function combin(number: number | Range | RangeReference |
        FunctionResult, numberChosen: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the total number of items.
        - id: numberChosen
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the number of items in each combination.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.combina'
    name: combina
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of combinations with repetitions for a given number of
      items.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function combina(number: number | Range | RangeReference |
        FunctionResult, numberChosen: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the total number of items.
        - id: numberChosen
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the number of items in each combination.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.complex'
    name: complex
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts real and imaginary coefficients into a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function complex(realNum: number | string | boolean | Range |
        RangeReference | FunctionResult, iNum: number | string | boolean | Range
        | RangeReference | FunctionResult, suffix?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: realNum
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the real coefficient of the complex number.
        - id: iNum
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the imaginary coefficient of the complex number.
        - id: suffix
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the suffix for the imaginary component of the complex number.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.concatenate'
    name: concatenate
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Joins several text strings into one text string.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function concatenate(values: Array<string | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<string | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 text strings to be
            joined into a single text string and can be text strings, numbers,
            or single-cell references.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.confidence_Norm'
    name: confidence_Norm
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the confidence interval for a population mean, using a normal
      distribution.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function confidence_Norm(alpha: number | Range | RangeReference |
        FunctionResult, standardDev: number | Range | RangeReference |
        FunctionResult, size: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: alpha
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the significance level used to compute the confidence level, a
            number greater than 0 and less than 1.
        - id: standardDev
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the population standard deviation for the data range and is
            assumed to be known. standardDev must be greater than 0.
        - id: size
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the sample size.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.confidence_T'
    name: confidence_T
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the confidence interval for a population mean, using a Student's T
      distribution.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function confidence_T(alpha: number | Range | RangeReference |
        FunctionResult, standardDev: number | Range | RangeReference |
        FunctionResult, size: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: alpha
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the significance level used to compute the confidence level, a
            number greater than 0 and less than 1.
        - id: standardDev
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the population standard deviation for the data range and is
            assumed to be known. standardDev must be greater than 0.
        - id: size
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the sample size.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.convert'
    name: convert
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a number from one measurement system to another.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function convert(number: number | string | boolean | Range |
        RangeReference | FunctionResult, fromUnit: number | string | boolean |
        Range | RangeReference | FunctionResult, toUnit: number | string |
        boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the value in from_units to convert.
        - id: fromUnit
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the units for number.
        - id: toUnit
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the units for the result.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.cos'
    name: cos
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the cosine of an angle.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function cos(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the angle in radians for which you want the cosine.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.cosh'
    name: cosh
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hyperbolic cosine of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function cosh(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is any real number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.cot'
    name: cot
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the cotangent of an angle.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function cot(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the angle in radians for which you want the cotangent.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.coth'
    name: coth
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hyperbolic cotangent of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function coth(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the angle in radians for which you want the hyperbolic cotangent.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.count'
    name: count
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Counts the number of cells in a range that contain numbers.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function count(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 arguments that can
            contain or refer to a variety of different types of data, but only
            numbers are counted.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.countA'
    name: countA
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Counts the number of cells in a range that are not empty.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function countA(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 arguments
            representing the values and cells you want to count. Values can be
            any type of information.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.countBlank'
    name: countBlank
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Counts the number of empty cells in a specified range of cells.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function countBlank(range: Range | RangeReference | FunctionResult)'
      parameters:
        - id: range
          type:
            - Range | RangeReference | FunctionResult
          description: |
            Is the range from which you want to count the empty cells.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.countIf'
    name: countIf
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Counts the number of cells within a range that meet the given condition.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function countIf(range: Range | RangeReference | FunctionResult,
        criteria: number | string | boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: range
          type:
            - Range | RangeReference | FunctionResult
          description: Is the range of cells from which you want to count nonblank cells.
        - id: criteria
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is the condition in the form of a number, expression, or text that
            defines which cells will be counted.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.countIfs'
    name: countIfs
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Counts the number of cells specified by a given set of conditions or
      criteria.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function countIfs(values: Array<Range | RangeReference | FunctionResult
        | number | string | boolean>)
      parameters:
        - id: values
          type:
            - >-
              Array<Range | RangeReference | FunctionResult | number | string |
              boolean>
          description: >
            List of parameters, where the first element of each pair is the Is
            the range of cells you want evaluated for the particular condition ,
            and the second element is is the condition in the form of a number,
            expression, or text that defines which cells will be counted.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.coupDayBs'
    name: coupDayBs
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of days from the beginning of the coupon period to the
      settlement date.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function coupDayBs(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, frequency: number | string |
        boolean | Range | RangeReference | FunctionResult, basis?: number |
        string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.coupDays'
    name: coupDays
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of days in the coupon period that contains the
      settlement date.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function coupDays(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, frequency: number | string |
        boolean | Range | RangeReference | FunctionResult, basis?: number |
        string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.coupDaysNc'
    name: coupDaysNc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of days from the settlement date to the next coupon
      date.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function coupDaysNc(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, frequency: number | string |
        boolean | Range | RangeReference | FunctionResult, basis?: number |
        string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.coupNcd'
    name: coupNcd
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the next coupon date after the settlement date.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function coupNcd(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, frequency: number | string |
        boolean | Range | RangeReference | FunctionResult, basis?: number |
        string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.coupNum'
    name: coupNum
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of coupons payable between the settlement date and
      maturity date.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function coupNum(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, frequency: number | string |
        boolean | Range | RangeReference | FunctionResult, basis?: number |
        string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.coupPcd'
    name: coupPcd
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the previous coupon date before the settlement date.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function coupPcd(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, frequency: number | string |
        boolean | Range | RangeReference | FunctionResult, basis?: number |
        string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.csc'
    name: csc
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the cosecant of an angle.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function csc(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the angle in radians for which you want the cosecant.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.csch'
    name: csch
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hyperbolic cosecant of an angle.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function csch(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the angle in radians for which you want the hyperbolic cosecant.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.cumIPmt'
    name: cumIPmt
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the cumulative interest paid between two periods.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function cumIPmt(rate: number | string | boolean | Range |
        RangeReference | FunctionResult, nper: number | string | boolean | Range
        | RangeReference | FunctionResult, pv: number | string | boolean | Range
        | RangeReference | FunctionResult, startPeriod: number | string |
        boolean | Range | RangeReference | FunctionResult, endPeriod: number |
        string | boolean | Range | RangeReference | FunctionResult, type: number
        | string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the interest rate.
        - id: nper
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the total number of payment periods.
        - id: pv
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the present value.
        - id: startPeriod
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the first period in the calculation.
        - id: endPeriod
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the last period in the calculation.
        - id: type
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the timing of the payment.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.cumPrinc'
    name: cumPrinc
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the cumulative principal paid on a loan between two periods.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function cumPrinc(rate: number | string | boolean | Range |
        RangeReference | FunctionResult, nper: number | string | boolean | Range
        | RangeReference | FunctionResult, pv: number | string | boolean | Range
        | RangeReference | FunctionResult, startPeriod: number | string |
        boolean | Range | RangeReference | FunctionResult, endPeriod: number |
        string | boolean | Range | RangeReference | FunctionResult, type: number
        | string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the interest rate.
        - id: nper
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the total number of payment periods.
        - id: pv
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the present value.
        - id: startPeriod
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the first period in the calculation.
        - id: endPeriod
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the last period in the calculation.
        - id: type
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the timing of the payment.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.date'
    name: date
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number that represents the date in Microsoft Excel date-time
      code.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function date(year: number | Range | RangeReference | FunctionResult,
        month: number | Range | RangeReference | FunctionResult, day: number |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: year
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a number from 1900 or 1904 (depending on the workbook's date
            system) to 9999.
        - id: month
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is a number from 1 to 12 representing the month of the year.
        - id: day
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is a number from 1 to 31 representing the day of the month.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.datevalue'
    name: datevalue
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Converts a date in the form of text to a number that represents the date
      in Microsoft Excel date-time code.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function datevalue(dateText: string | number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: dateText
          type:
            - string | number | Range | RangeReference | FunctionResult
          description: >
            Is text that represents a date in a Microsoft Excel date format,
            between 1/1/1900 or 1/1/1904 (depending on the workbook's date
            system) and 12/31/9999.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.daverage'
    name: daverage
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Averages the values in a column in a list or database that match
      conditions you specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function daverage(database: Range | RangeReference | FunctionResult,
        field: number | string | Range | RangeReference | FunctionResult,
        criteria: string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.day'
    name: day
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the day of the month, a number from 1 to 31.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function day(serialNumber: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: serialNumber
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is a number in the date-time code used by Microsoft Excel.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.days'
    name: days
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the number of days between the two dates.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function days(endDate: string | number | Range | RangeReference |
        FunctionResult, startDate: string | number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: endDate
          type:
            - string | number | Range | RangeReference | FunctionResult
          description: >-
            startDate and endDate are the two dates between which you want to
            know the number of days.
        - id: startDate
          type:
            - string | number | Range | RangeReference | FunctionResult
          description: >
            startDate and endDate are the two dates between which you want to
            know the number of days.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.days360'
    name: days360
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of days between two dates based on a 360-day year
      (twelve 30-day months).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function days360(startDate: number | Range | RangeReference |
        FunctionResult, endDate: number | Range | RangeReference |
        FunctionResult, method?: boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: startDate
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            startDate and endDate are the two dates between which you want to
            know the number of days.
        - id: endDate
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            startDate and endDate are the two dates between which you want to
            know the number of days.
        - id: method
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value specifying the calculation method: U.S. (NASD) =
            FALSE or omitted; European = TRUE.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.db'
    name: db
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the depreciation of an asset for a specified period using the
      fixed-declining balance method.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function db(cost: number | Range | RangeReference | FunctionResult,
        salvage: number | Range | RangeReference | FunctionResult, life: number
        | Range | RangeReference | FunctionResult, period: number | Range |
        RangeReference | FunctionResult, month?: number | Range | RangeReference
        | FunctionResult)
      parameters:
        - id: cost
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the initial cost of the asset.
        - id: salvage
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the salvage value at the end of the life of the asset.
        - id: life
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the number of periods over which the asset is being depreciated
            (sometimes called the useful life of the asset).
        - id: period
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the period for which you want to calculate the depreciation.
            Period must use the same units as Life.
        - id: month
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the number of months in the first year. If month is omitted, it
            is assumed to be 12.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dbcs'
    name: dbcs
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Changes half-width (single-byte) characters within a character string to
      full-width (double-byte) characters. Use with double-byte character sets
      (DBCS).

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function dbcs(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is a text, or a reference to a cell containing a text.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dcount'
    name: dcount
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Counts the cells containing numbers in the field (column) of records in
      the database that match the conditions you specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dcount(database: Range | RangeReference | FunctionResult,
        field: number | string | Range | RangeReference | FunctionResult,
        criteria: string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dcountA'
    name: dcountA
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Counts nonblank cells in the field (column) of records in the database
      that match the conditions you specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dcountA(database: Range | RangeReference | FunctionResult,
        field: number | string | Range | RangeReference | FunctionResult,
        criteria: string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.ddb'
    name: ddb
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the depreciation of an asset for a specified period using the
      double-declining balance method or some other method you specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function ddb(cost: number | Range | RangeReference | FunctionResult,
        salvage: number | Range | RangeReference | FunctionResult, life: number
        | Range | RangeReference | FunctionResult, period: number | Range |
        RangeReference | FunctionResult, factor?: number | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: cost
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the initial cost of the asset.
        - id: salvage
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the salvage value at the end of the life of the asset.
        - id: life
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the number of periods over which the asset is being depreciated
            (sometimes called the useful life of the asset).
        - id: period
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the period for which you want to calculate the depreciation.
            Period must use the same units as Life.
        - id: factor
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the rate at which the balance declines. If Factor is omitted, it
            is assumed to be 2 (the double-declining balance method).
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dec2Bin'
    name: dec2Bin
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a decimal number to binary.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dec2Bin(number: number | string | boolean | Range |
        RangeReference | FunctionResult, places?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the decimal integer you want to convert.
        - id: places
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of characters to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dec2Hex'
    name: dec2Hex
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a decimal number to hexadecimal.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dec2Hex(number: number | string | boolean | Range |
        RangeReference | FunctionResult, places?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the decimal integer you want to convert.
        - id: places
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of characters to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dec2Oct'
    name: dec2Oct
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a decimal number to octal.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dec2Oct(number: number | string | boolean | Range |
        RangeReference | FunctionResult, places?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the decimal integer you want to convert.
        - id: places
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of characters to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.decimal'
    name: decimal
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Converts a text representation of a number in a given base into a decimal
      number.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function decimal(number: string | Range | RangeReference |
        FunctionResult, radix: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the number that you want to convert.
        - id: radix
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the base Radix of the number you are converting.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.degrees'
    name: degrees
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts radians to degrees.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function degrees(angle: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: angle
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the angle in radians that you want to convert.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.delta'
    name: delta
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Tests whether two numbers are equal.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function delta(number1: number | string | boolean | Range |
        RangeReference | FunctionResult, number2?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number1
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the first number.
        - id: number2
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the second number.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.devSq'
    name: devSq
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the sum of squares of deviations of data points from their sample
      mean.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function devSq(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 arguments, or an
            array or array reference, on which you want DEVSQ to calculate.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dget'
    name: dget
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Extracts from a database a single record that matches the conditions you
      specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dget(database: Range | RangeReference | FunctionResult, field:
        number | string | Range | RangeReference | FunctionResult, criteria:
        string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - >-
            @@microsoft/office-js.Excel.FunctionResult<number | boolean |
            string>
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.disc'
    name: disc
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the discount rate for a security.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function disc(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, pr: number | string | boolean |
        Range | RangeReference | FunctionResult, redemption: number | string |
        boolean | Range | RangeReference | FunctionResult, basis?: number |
        string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: pr
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's price per $100 face value.
        - id: redemption
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's redemption value per $100 face value.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dmax'
    name: dmax
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the largest number in the field (column) of records in the
      database that match the conditions you specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dmax(database: Range | RangeReference | FunctionResult, field:
        number | string | Range | RangeReference | FunctionResult, criteria:
        string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dmin'
    name: dmin
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the smallest number in the field (column) of records in the
      database that match the conditions you specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dmin(database: Range | RangeReference | FunctionResult, field:
        number | string | Range | RangeReference | FunctionResult, criteria:
        string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dollar'
    name: dollar
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a number to text, using currency format.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dollar(number: number | Range | RangeReference |
        FunctionResult, decimals?: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a number, a reference to a cell containing a number, or a formula
            that evaluates to a number.
        - id: decimals
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the number of digits to the right of the decimal point. The
            number is rounded as necessary; if omitted, Decimals = 2.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dollarDe'
    name: dollarDe
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Converts a dollar price, expressed as a fraction, into a dollar price,
      expressed as a decimal number.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dollarDe(fractionalDollar: number | string | boolean | Range |
        RangeReference | FunctionResult, fraction: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: fractionalDollar
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a number expressed as a fraction.
        - id: fraction
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the integer to use in the denominator of the fraction.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dollarFr'
    name: dollarFr
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Converts a dollar price, expressed as a decimal number, into a dollar
      price, expressed as a fraction.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dollarFr(decimalDollar: number | string | boolean | Range |
        RangeReference | FunctionResult, fraction: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: decimalDollar
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a decimal number.
        - id: fraction
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the integer to use in the denominator of a fraction.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dproduct'
    name: dproduct
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Multiplies the values in the field (column) of records in the database
      that match the conditions you specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dproduct(database: Range | RangeReference | FunctionResult,
        field: number | string | Range | RangeReference | FunctionResult,
        criteria: string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dstDev'
    name: dstDev
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Estimates the standard deviation based on a sample from selected database
      entries.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dstDev(database: Range | RangeReference | FunctionResult,
        field: number | string | Range | RangeReference | FunctionResult,
        criteria: string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dstDevP'
    name: dstDevP
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Calculates the standard deviation based on the entire population of
      selected database entries.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dstDevP(database: Range | RangeReference | FunctionResult,
        field: number | string | Range | RangeReference | FunctionResult,
        criteria: string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dsum'
    name: dsum
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Adds the numbers in the field (column) of records in the database that
      match the conditions you specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dsum(database: Range | RangeReference | FunctionResult, field:
        number | string | Range | RangeReference | FunctionResult, criteria:
        string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.duration'
    name: duration
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the annual duration of a security with periodic interest payments.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function duration(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, coupon: number | string |
        boolean | Range | RangeReference | FunctionResult, yld: number | string
        | boolean | Range | RangeReference | FunctionResult, frequency: number |
        string | boolean | Range | RangeReference | FunctionResult, basis?:
        number | string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: coupon
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual coupon rate.
        - id: yld
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual yield.
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dvar'
    name: dvar
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Estimates variance based on a sample from selected database entries.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dvar(database: Range | RangeReference | FunctionResult, field:
        number | string | Range | RangeReference | FunctionResult, criteria:
        string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.dvarP'
    name: dvarP
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Calculates variance based on the entire population of selected database
      entries.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function dvarP(database: Range | RangeReference | FunctionResult, field:
        number | string | Range | RangeReference | FunctionResult, criteria:
        string | Range | RangeReference | FunctionResult)
      parameters:
        - id: database
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is the range of cells that makes up the list or database. A database
            is a list of related data.
        - id: field
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: >-
            Is either the label of the column in double quotation marks or a
            number that represents the column's position in the list.
        - id: criteria
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the range of cells that contains the conditions you specify. The
            range includes a column label and one cell below the label for a
            condition.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.ecma_Ceiling'
    name: ecma_Ceiling
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Rounds a number up, to the nearest integer or to the nearest multiple of
      significance.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function ecma_Ceiling(number: number | Range | RangeReference |
        FunctionResult, significance: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value you want to round.
        - id: significance
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the multiple to which you want to round.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.edate'
    name: edate
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the serial number of the date that is the indicated number of
      months before or after the start date.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function edate(startDate: number | string | boolean | Range |
        RangeReference | FunctionResult, months: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: startDate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a serial date number that represents the start date.
        - id: months
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of months before or after startDate.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.effect'
    name: effect
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the effective annual interest rate.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function effect(nominalRate: number | string | boolean | Range |
        RangeReference | FunctionResult, npery: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: nominalRate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the nominal interest rate.
        - id: npery
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of compounding periods per year.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.eoMonth'
    name: eoMonth
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the serial number of the last day of the month before or after a
      specified number of months.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function eoMonth(startDate: number | string | boolean | Range |
        RangeReference | FunctionResult, months: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: startDate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a serial date number that represents the start date.
        - id: months
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of months before or after the startDate.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.erf'
    name: erf
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the error function.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function erf(lowerLimit: number | string | boolean | Range |
        RangeReference | FunctionResult, upperLimit?: number | string | boolean
        | Range | RangeReference | FunctionResult)
      parameters:
        - id: lowerLimit
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the lower bound for integrating ERF.
        - id: upperLimit
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the upper bound for integrating ERF.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.erfC'
    name: erfC
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the complementary error function.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function erfC(x: number | string | boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: x
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the lower bound for integrating ERF.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.erfC_Precise'
    name: erfC_Precise
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the complementary error function.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function erfC_Precise(X: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: X
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the lower bound for integrating ERFC.PRECISE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.erf_Precise'
    name: erf_Precise
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the error function.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function erf_Precise(X: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: X
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the lower bound for integrating ERF.PRECISE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.error_Type'
    name: error_Type
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a number matching an error value.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function error_Type(errorVal: string | number | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: errorVal
          type:
            - >-
              string | number | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is the error value for which you want the identifying number, and
            can be an actual error value or a reference to a cell containing an
            error value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.even'
    name: even
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Rounds a positive number up and negative number down to the nearest even
      integer.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function even(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the value to round.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.exact'
    name: exact
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks whether two text strings are exactly the same, and returns TRUE or
      FALSE. EXACT is case-sensitive.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function exact(text1: string | Range | RangeReference | FunctionResult,
        text2: string | Range | RangeReference | FunctionResult)
      parameters:
        - id: text1
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the first text string.
        - id: text2
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is the second text string.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.exp'
    name: exp
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns e raised to the power of a given number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function exp(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the exponent applied to the base e. The constant e equals
            2.71828182845904, the base of the natural logarithm.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.expon_Dist'
    name: expon_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the exponential distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function expon_Dist(x: number | Range | RangeReference | FunctionResult,
        lambda: number | Range | RangeReference | FunctionResult, cumulative:
        boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is the value of the function, a nonnegative number.'
        - id: lambda
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is the parameter value, a positive number.'
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value for the function to return: the cumulative
            distribution function = TRUE; the probability density function =
            FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.fact'
    name: fact
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the factorial of a number, equal to 1*2*3*...* Number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function fact(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the nonnegative number you want the factorial of.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.factDouble'
    name: factDouble
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the double factorial of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function factDouble(number: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the value for which to return the double factorial.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.false'
    name: 'false'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the logical value FALSE.
      [Api set: ExcelApi 1.2]
    syntax:
      content: function false()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.find'
    name: find
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the starting position of one text string within another text
      string. FIND is case-sensitive.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function find(findText: string | Range | RangeReference |
        FunctionResult, withinText: string | Range | RangeReference |
        FunctionResult, startNum?: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: findText
          type:
            - string | Range | RangeReference | FunctionResult
          description: >-
            Is the text you want to find. Use double quotes (empty text) to
            match the first character in withinText; wildcard characters not
            allowed.
        - id: withinText
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text containing the text you want to find.
        - id: startNum
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Specifies the character at which to start the search. The first
            character in withinText is character number 1. If omitted, startNum
            = 1.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.findB'
    name: findB
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Finds the starting position of one text string within another text string.
      FINDB is case-sensitive. Use with double-byte character sets (DBCS).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function findB(findText: string | Range | RangeReference |
        FunctionResult, withinText: string | Range | RangeReference |
        FunctionResult, startNum?: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: findText
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text you want to find.
        - id: withinText
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text containing the text you want to find.
        - id: startNum
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Specifies the character at which to start the search.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.fisher'
    name: fisher
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the Fisher transformation.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function fisher(x: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the value for which you want the transformation, a number between
            -1 and 1, excluding -1 and 1.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.fisherInv'
    name: fisherInv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the inverse of the Fisher transformation: if y = FISHER(x), then
      FISHERINV(y) = x.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function fisherInv(y: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: 'y'
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the value for which you want to perform the inverse of the
            transformation.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.fixed'
    name: fixed
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Rounds a number to the specified number of decimals and returns the result
      as text with or without commas.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function fixed(number: number | Range | RangeReference | FunctionResult,
        decimals?: number | Range | RangeReference | FunctionResult, noCommas?:
        boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number you want to round and convert to text.
        - id: decimals
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the number of digits to the right of the decimal point. If
            omitted, Decimals = 2.
          optional: true
        - id: noCommas
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: do not display commas in the returned text =
            TRUE; do display commas in the returned text = FALSE or omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.floor_Math'
    name: floor_Math
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Rounds a number down, to the nearest integer or to the nearest multiple of
      significance.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function floor_Math(number: number | Range | RangeReference |
        FunctionResult, significance?: number | Range | RangeReference |
        FunctionResult, mode?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value you want to round.
        - id: significance
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the multiple to which you want to round.
          optional: true
        - id: mode
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            When given and nonzero this function will round towards zero.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.floor_Precise'
    name: floor_Precise
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Rounds a number down, to the nearest integer or to the nearest multiple of
      significance.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function floor_Precise(number: number | Range | RangeReference |
        FunctionResult, significance?: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the numeric value you want to round.
        - id: significance
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the multiple to which you want to round.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.fv'
    name: fv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the future value of an investment based on periodic, constant
      payments and a constant interest rate.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function fv(rate: number | Range | RangeReference | FunctionResult,
        nper: number | Range | RangeReference | FunctionResult, pmt: number |
        Range | RangeReference | FunctionResult, pv?: number | Range |
        RangeReference | FunctionResult, type?: number | Range | RangeReference
        | FunctionResult)
      parameters:
        - id: rate
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
        - id: nper
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the total number of payment periods in the investment.
        - id: pmt
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the payment made each period; it cannot change over the life of
            the investment.
        - id: pv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the present value, or the lump-sum amount that a series of future
            payments is worth now. If omitted, Pv = 0.
          optional: true
        - id: type
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a value representing the timing of payment: payment at the
            beginning of the period = 1; payment at the end of the period = 0 or
            omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.fvschedule'
    name: fvschedule
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the future value of an initial principal after applying a series
      of compound interest rates.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function fvschedule(principal: number | string | boolean | Range |
        RangeReference | FunctionResult, schedule: number | string | Range |
        boolean | RangeReference | FunctionResult)
      parameters:
        - id: principal
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the present value.
        - id: schedule
          type:
            - >-
              number | string | Range | boolean | RangeReference |
              FunctionResult
          description: |
            Is an array of interest rates to apply.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.f_Dist'
    name: f_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the (left-tailed) F probability distribution (degree of diversity)
      for two data sets.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function f_Dist(x: number | Range | RangeReference | FunctionResult,
        degFreedom1: number | Range | RangeReference | FunctionResult,
        degFreedom2: number | Range | RangeReference | FunctionResult,
        cumulative: boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the value at which to evaluate the function, a nonnegative
            number.
        - id: degFreedom1
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the numerator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
        - id: degFreedom2
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the denominator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value for the function to return: the cumulative
            distribution function = TRUE; the probability density function =
            FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.f_Dist_RT'
    name: f_Dist_RT
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the (right-tailed) F probability distribution (degree of
      diversity) for two data sets.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function f_Dist_RT(x: number | Range | RangeReference | FunctionResult,
        degFreedom1: number | Range | RangeReference | FunctionResult,
        degFreedom2: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the value at which to evaluate the function, a nonnegative
            number.
        - id: degFreedom1
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the numerator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
        - id: degFreedom2
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the denominator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.f_Inv'
    name: f_Inv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the inverse of the (left-tailed) F probability distribution: if p
      = F.DIST(x,...), then F.INV(p,...) = x.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function f_Inv(probability: number | Range | RangeReference |
        FunctionResult, degFreedom1: number | Range | RangeReference |
        FunctionResult, degFreedom2: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a probability associated with the F cumulative distribution, a
            number between 0 and 1 inclusive.
        - id: degFreedom1
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the numerator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
        - id: degFreedom2
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the denominator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.f_Inv_RT'
    name: f_Inv_RT
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the inverse of the (right-tailed) F probability distribution: if p
      = F.DIST.RT(x,...), then F.INV.RT(p,...) = x.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function f_Inv_RT(probability: number | Range | RangeReference |
        FunctionResult, degFreedom1: number | Range | RangeReference |
        FunctionResult, degFreedom2: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a probability associated with the F cumulative distribution, a
            number between 0 and 1 inclusive.
        - id: degFreedom1
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the numerator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
        - id: degFreedom2
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the denominator degrees of freedom, a number between 1 and 10^10,
            excluding 10^10.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.gamma'
    name: gamma
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the Gamma function value.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function gamma(x: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the value for which you want to calculate Gamma.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.gammaLn'
    name: gammaLn
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the natural logarithm of the gamma function.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function gammaLn(x: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the value for which you want to calculate GAMMALN, a positive
            number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.gammaLn_Precise'
    name: gammaLn_Precise
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the natural logarithm of the gamma function.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function gammaLn_Precise(x: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the value for which you want to calculate GAMMALN.PRECISE, a
            positive number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.gamma_Dist'
    name: gamma_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the gamma distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function gamma_Dist(x: number | Range | RangeReference | FunctionResult,
        alpha: number | Range | RangeReference | FunctionResult, beta: number |
        Range | RangeReference | FunctionResult, cumulative: boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the value at which you want to evaluate the distribution, a
            nonnegative number.
        - id: alpha
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is a parameter to the distribution, a positive number.'
        - id: beta
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a parameter to the distribution, a positive number. If beta = 1,
            GAMMA.DIST returns the standard gamma distribution.
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: return the cumulative distribution function =
            TRUE; return the probability mass function = FALSE or omitted.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.gamma_Inv'
    name: gamma_Inv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the inverse of the gamma cumulative distribution: if p =
      GAMMA.DIST(x,...), then GAMMA.INV(p,...) = x.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function gamma_Inv(probability: number | Range | RangeReference |
        FunctionResult, alpha: number | Range | RangeReference | FunctionResult,
        beta: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the probability associated with the gamma distribution, a number
            between 0 and 1, inclusive.
        - id: alpha
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is a parameter to the distribution, a positive number.'
        - id: beta
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a parameter to the distribution, a positive number. If beta = 1,
            GAMMA.INV returns the inverse of the standard gamma distribution.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.gauss'
    name: gauss
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns 0.5 less than the standard normal cumulative distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function gauss(x: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the value for which you want the distribution.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.gcd'
    name: gcd
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the greatest common divisor.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function gcd(values: Array<number | string | Range | boolean |
        RangeReference | FunctionResult>)
      parameters:
        - id: values
          type:
            - >-
              Array<number | string | Range | boolean | RangeReference |
              FunctionResult>
          description: |
            List of parameters, whose elements are 1 to 255 values.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.geoMean'
    name: geoMean
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the geometric mean of an array or range of positive numeric data.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function geoMean(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers or names,
            arrays, or references that contain numbers for which you want the
            mean.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.geStep'
    name: geStep
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Tests whether a number is greater than a threshold value.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function geStep(number: number | string | boolean | Range |
        RangeReference | FunctionResult, step?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the value to test against step.
        - id: step
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the threshold value.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.harMean'
    name: harMean
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the harmonic mean of a data set of positive numbers: the
      reciprocal of the arithmetic mean of reciprocals.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function harMean(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers or names,
            arrays, or references that contain numbers for which you want the
            harmonic mean.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.hex2Bin'
    name: hex2Bin
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a Hexadecimal number to binary.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function hex2Bin(number: number | string | boolean | Range |
        RangeReference | FunctionResult, places?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the hexadecimal number you want to convert.
        - id: places
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of characters to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.hex2Dec'
    name: hex2Dec
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a hexadecimal number to decimal.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function hex2Dec(number: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the hexadecimal number you want to convert.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.hex2Oct'
    name: hex2Oct
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a hexadecimal number to octal.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function hex2Oct(number: number | string | boolean | Range |
        RangeReference | FunctionResult, places?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the hexadecimal number you want to convert.
        - id: places
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of characters to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.hlookup'
    name: hlookup
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Looks for a value in the top row of a table or array of values and returns
      the value in the same column from a row you specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function hlookup(lookupValue: number | string | boolean | Range |
        RangeReference | FunctionResult, tableArray: Range | number |
        RangeReference | FunctionResult, rowIndexNum: Range | number |
        RangeReference | FunctionResult, rangeLookup?: boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: lookupValue
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the value to be found in the first row of the table and can be a
            value, a reference, or a text string.
        - id: tableArray
          type:
            - Range | number | RangeReference | FunctionResult
          description: >-
            Is a table of text, numbers, or logical values in which data is
            looked up. tableArray can be a reference to a range or a range name.
        - id: rowIndexNum
          type:
            - Range | number | RangeReference | FunctionResult
          description: >-
            Is the row number in tableArray from which the matching value should
            be returned. The first row of values in the table is row 1.
        - id: rangeLookup
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: to find the closest match in the top row (sorted
            in ascending order) = TRUE or omitted; find an exact match = FALSE.
          optional: true
      return:
        type:
          - >-
            @@microsoft/office-js.Excel.FunctionResult<number | string |
            boolean>
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.hour'
    name: hour
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hour as a number from 0 (12:00 A.M.) to 23 (11:00 P.M.).
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function hour(serialNumber: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: serialNumber
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a number in the date-time code used by Microsoft Excel, or text
            in time format, such as 16:48:00 or 4:48:00 PM.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.hyperlink'
    name: hyperlink
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Creates a shortcut or jump that opens a document stored on your hard
      drive, a network server, or on the Internet.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function hyperlink(linkLocation: string | Range | RangeReference |
        FunctionResult, friendlyName?: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: linkLocation
          type:
            - string | Range | RangeReference | FunctionResult
          description: >-
            Is the text giving the path and file name to the document to be
            opened, a hard drive location, UNC address, or URL path.
        - id: friendlyName
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is text or a number that is displayed in the cell. If omitted, the
            cell displays the linkLocation text.
          optional: true
      return:
        type:
          - >-
            @@microsoft/office-js.Excel.FunctionResult<number | string |
            boolean>
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.hypGeom_Dist'
    name: hypGeom_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hypergeometric distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function hypGeom_Dist(sampleS: number | Range | RangeReference |
        FunctionResult, numberSample: number | Range | RangeReference |
        FunctionResult, populationS: number | Range | RangeReference |
        FunctionResult, numberPop: number | Range | RangeReference |
        FunctionResult, cumulative: boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: sampleS
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of successes in the sample.
        - id: numberSample
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the size of the sample.
        - id: populationS
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of successes in the population.
        - id: numberPop
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the population size.
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability density function, use FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.if'
    name: if
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks whether a condition is met, and returns one value if TRUE, and
      another value if FALSE.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function if(logicalTest: boolean | Range | RangeReference |
        FunctionResult, valueIfTrue?: Range | number | string | boolean |
        RangeReference | FunctionResult, valueIfFalse?: Range | number | string
        | boolean | RangeReference | FunctionResult)
      parameters:
        - id: logicalTest
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: Is any value or expression that can be evaluated to TRUE or FALSE.
        - id: valueIfTrue
          type:
            - >-
              Range | number | string | boolean | RangeReference |
              FunctionResult
          description: >-
            Is the value that is returned if logicalTest is TRUE. If omitted,
            TRUE is returned. You can nest up to seven IF functions.
          optional: true
        - id: valueIfFalse
          type:
            - >-
              Range | number | string | boolean | RangeReference |
              FunctionResult
          description: >
            Is the value that is returned if logicalTest is FALSE. If omitted,
            FALSE is returned.
          optional: true
      return:
        type:
          - >-
            @@microsoft/office-js.Excel.FunctionResult<number | string |
            boolean>
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imAbs'
    name: imAbs
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the absolute value (modulus) of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imAbs(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the absolute value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imaginary'
    name: imaginary
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the imaginary coefficient of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imaginary(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the imaginary coefficient.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imArgument'
    name: imArgument
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the argument q, an angle expressed in radians.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imArgument(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the argument.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imConjugate'
    name: imConjugate
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the complex conjugate of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imConjugate(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the conjugate.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imCos'
    name: imCos
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the cosine of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imCos(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the cosine.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imCosh'
    name: imCosh
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hyperbolic cosine of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imCosh(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the hyperbolic cosine.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imCot'
    name: imCot
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the cotangent of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imCot(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the cotangent.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imCsc'
    name: imCsc
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the cosecant of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imCsc(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the cosecant.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imCsch'
    name: imCsch
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hyperbolic cosecant of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imCsch(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the hyperbolic cosecant.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imDiv'
    name: imDiv
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the quotient of two complex numbers.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imDiv(inumber1: number | string | boolean | Range |
        RangeReference | FunctionResult, inumber2: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: inumber1
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the complex numerator or dividend.
        - id: inumber2
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the complex denominator or divisor.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imExp'
    name: imExp
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the exponential of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imExp(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the exponential.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imLn'
    name: imLn
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the natural logarithm of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imLn(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the natural logarithm.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imLog10'
    name: imLog10
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the base-10 logarithm of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imLog10(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the common logarithm.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imLog2'
    name: imLog2
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the base-2 logarithm of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imLog2(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the base-2 logarithm.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imPower'
    name: imPower
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a complex number raised to an integer power.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imPower(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult, number: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a complex number you want to raise to a power.
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the power to which you want to raise the complex number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imProduct'
    name: imProduct
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the product of 1 to 255 complex numbers.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imProduct(values: Array<Range | number | string | boolean |
        RangeReference | FunctionResult>)
      parameters:
        - id: values
          type:
            - >-
              Array<Range | number | string | boolean | RangeReference |
              FunctionResult>
          description: >
            Inumber1, Inumber2,... are from 1 to 255 complex numbers to
            multiply.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imReal'
    name: imReal
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the real coefficient of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imReal(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the real coefficient.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imSec'
    name: imSec
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the secant of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imSec(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the secant.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imSech'
    name: imSech
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hyperbolic secant of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imSech(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the hyperbolic secant.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imSin'
    name: imSin
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the sine of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imSin(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the sine.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imSinh'
    name: imSinh
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hyperbolic sine of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imSinh(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the hyperbolic sine.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imSqrt'
    name: imSqrt
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the square root of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imSqrt(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the square root.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imSub'
    name: imSub
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the difference of two complex numbers.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imSub(inumber1: number | string | boolean | Range |
        RangeReference | FunctionResult, inumber2: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: inumber1
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the complex number from which to subtract inumber2.
        - id: inumber2
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the complex number to subtract from inumber1.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imSum'
    name: imSum
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the sum of complex numbers.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imSum(values: Array<Range | number | string | boolean |
        RangeReference | FunctionResult>)
      parameters:
        - id: values
          type:
            - >-
              Array<Range | number | string | boolean | RangeReference |
              FunctionResult>
          description: >
            List of parameters, whose elements are from 1 to 255 complex numbers
            to add.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.imTan'
    name: imTan
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the tangent of a complex number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function imTan(inumber: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: inumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a complex number for which you want the tangent.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.int'
    name: int
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Rounds a number down to the nearest integer.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function int(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the real number you want to round down to an integer.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.intRate'
    name: intRate
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the interest rate for a fully invested security.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function intRate(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, investment: number | string |
        boolean | Range | RangeReference | FunctionResult, redemption: number |
        string | boolean | Range | RangeReference | FunctionResult, basis?:
        number | string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: investment
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the amount invested in the security.
        - id: redemption
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the amount to be received at maturity.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.ipmt'
    name: ipmt
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the interest payment for a given period for an investment, based
      on periodic, constant payments and a constant interest rate.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function ipmt(rate: number | Range | RangeReference | FunctionResult,
        per: number | Range | RangeReference | FunctionResult, nper: number |
        Range | RangeReference | FunctionResult, pv: number | Range |
        RangeReference | FunctionResult, fv?: number | Range | RangeReference |
        FunctionResult, type?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: rate
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
        - id: per
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the period for which you want to find the interest and must be in
            the range 1 to Nper.
        - id: nper
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the total number of payment periods in an investment.
        - id: pv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the present value, or the lump-sum amount that a series of future
            payments is worth now.
        - id: fv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the future value, or a cash balance you want to attain after the
            last payment is made. If omitted, Fv = 0.
          optional: true
        - id: type
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a logical value representing the timing of payment: at the end of
            the period = 0 or omitted, at the beginning of the period = 1.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.irr'
    name: irr
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the internal rate of return for a series of cash flows.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function irr(values: Range | RangeReference | FunctionResult, guess?:
        number | Range | RangeReference | FunctionResult)
      parameters:
        - id: values
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is an array or a reference to cells that contain numbers for which
            you want to calculate the internal rate of return.
        - id: guess
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a number that you guess is close to the result of IRR; 0.1 (10
            percent) if omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isErr'
    name: isErr
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks whether a value is an error (#VALUE!, #REF!, #DIV/0!, #NUM!,
      #NAME?, or #NULL!) excluding #N/A, and returns TRUE or FALSE.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isErr(value: number | string | boolean | Range | RangeReference
        | FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isError'
    name: isError
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks whether a value is an error (#N/A, #VALUE!, #REF!, #DIV/0!, #NUM!,
      #NAME?, or #NULL!), and returns TRUE or FALSE.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isError(value: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isEven'
    name: isEven
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns TRUE if the number is even.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isEven(number: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the value to test.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isFormula'
    name: isFormula
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks whether a reference is to a cell containing a formula, and returns
      TRUE or FALSE.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function isFormula(reference: Range | RangeReference | FunctionResult)'
      parameters:
        - id: reference
          type:
            - Range | RangeReference | FunctionResult
          description: >
            Is a reference to the cell you want to test.  Reference can be a
            cell reference, a formula, or name that refers to a cell.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isLogical'
    name: isLogical
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks whether a value is a logical value (TRUE or FALSE), and returns
      TRUE or FALSE.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isLogical(value: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isNA'
    name: isNA
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Checks whether a value is #N/A, and returns TRUE or FALSE.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isNA(value: number | string | boolean | Range | RangeReference
        | FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isNonText'
    name: isNonText
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks whether a value is not text (blank cells are not text), and returns
      TRUE or FALSE.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isNonText(value: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is the value you want tested: a cell; a formula; or a name referring
            to a cell, formula, or value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isNumber'
    name: isNumber
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Checks whether a value is a number, and returns TRUE or FALSE.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isNumber(value: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isOdd'
    name: isOdd
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns TRUE if the number is odd.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isOdd(number: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the value to test.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isoWeekNum'
    name: isoWeekNum
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the ISO week number in the year for a given date.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isoWeekNum(date: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: date
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the date-time code used by Microsoft Excel for date and time
            calculation.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.iso_Ceiling'
    name: iso_Ceiling
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Rounds a number up, to the nearest integer or to the nearest multiple of
      significance.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function iso_Ceiling(number: number | Range | RangeReference |
        FunctionResult, significance?: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value you want to round.
        - id: significance
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the optional multiple to which you want to round.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.ispmt'
    name: ispmt
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the interest paid during a specific period of an investment.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function ispmt(rate: number | Range | RangeReference | FunctionResult,
        per: number | Range | RangeReference | FunctionResult, nper: number |
        Range | RangeReference | FunctionResult, pv: number | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: rate
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
        - id: per
          type:
            - number | Range | RangeReference | FunctionResult
          description: Period for which you want to find the interest.
        - id: nper
          type:
            - number | Range | RangeReference | FunctionResult
          description: Number of payment periods in an investment.
        - id: pv
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Lump sum amount that a series of future payments is right now.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isref'
    name: isref
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Checks whether a value is a reference, and returns TRUE or FALSE.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isref(value: Range | number | string | boolean | RangeReference
        | FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              Range | number | string | boolean | RangeReference |
              FunctionResult
          description: >
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.isText'
    name: isText
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Checks whether a value is text, and returns TRUE or FALSE.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function isText(value: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >
            Is the value you want to test. Value can refer to a cell, a formula,
            or a name that refers to a cell, formula, or value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.kurt'
    name: kurt
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the kurtosis of a data set.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function kurt(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers or names,
            arrays, or references that contain numbers for which you want the
            kurtosis.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.large'
    name: large
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the k-th largest value in a data set. For example, the fifth
      largest number.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function large(array: number | Range | RangeReference | FunctionResult,
        k: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: array
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the array or range of data for which you want to determine the
            k-th largest value.
        - id: k
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the position (from the largest) in the array or cell range of the
            value to return.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.lcm'
    name: lcm
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the least common multiple.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function lcm(values: Array<number | string | Range | boolean |
        RangeReference | FunctionResult>)
      parameters:
        - id: values
          type:
            - >-
              Array<number | string | Range | boolean | RangeReference |
              FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 values for which you
            want the least common multiple.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.left'
    name: left
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the specified number of characters from the start of a text
      string.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function left(text: string | Range | RangeReference | FunctionResult,
        numChars?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text string containing the characters you want to extract.
        - id: numChars
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Specifies how many characters you want LEFT to extract; 1 if
            omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.leftb'
    name: leftb
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the specified number of characters from the start of a text
      string. Use with double-byte character sets (DBCS).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function leftb(text: string | Range | RangeReference | FunctionResult,
        numBytes?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text string containing the characters you want to extract.
        - id: numBytes
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Specifies how many characters you want LEFT to return.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.len'
    name: len
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the number of characters in a text string.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function len(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the text whose length you want to find. Spaces count as
            characters.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.lenb'
    name: lenb
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of characters in a text string. Use with double-byte
      character sets (DBCS).

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function lenb(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is the text whose length you want to find.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.ln'
    name: ln
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the natural logarithm of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function ln(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the positive real number for which you want the natural
            logarithm.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.log'
    name: log
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the logarithm of a number to the base you specify.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function log(number: number | Range | RangeReference | FunctionResult,
        base?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the positive real number for which you want the logarithm.
        - id: base
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the base of the logarithm; 10 if omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.log10'
    name: log10
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the base-10 logarithm of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function log10(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the positive real number for which you want the base-10
            logarithm.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.logNorm_Dist'
    name: logNorm_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the lognormal distribution of x, where ln(x) is normally
      distributed with parameters Mean and Standard_dev.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function logNorm_Dist(x: number | Range | RangeReference |
        FunctionResult, mean: number | Range | RangeReference | FunctionResult,
        standardDev: number | Range | RangeReference | FunctionResult,
        cumulative: boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is the value at which to evaluate the function, a positive number.'
        - id: mean
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the mean of ln(x).
        - id: standardDev
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is the standard deviation of ln(x), a positive number.'
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability density function, use FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.logNorm_Inv'
    name: logNorm_Inv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the inverse of the lognormal cumulative distribution function of
      x, where ln(x) is normally distributed with parameters Mean and
      Standard_dev.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function logNorm_Inv(probability: number | Range | RangeReference |
        FunctionResult, mean: number | Range | RangeReference | FunctionResult,
        standardDev: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a probability associated with the lognormal distribution, a
            number between 0 and 1, inclusive.
        - id: mean
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the mean of ln(x).
        - id: standardDev
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the standard deviation of ln(x), a positive number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.lookup'
    name: lookup
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Looks up a value either from a one-row or one-column range or from an
      array. Provided for backward compatibility.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function lookup(lookupValue: number | string | boolean | Range |
        RangeReference | FunctionResult, lookupVector: Range | RangeReference |
        FunctionResult, resultVector?: Range | RangeReference | FunctionResult)
      parameters:
        - id: lookupValue
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is a value that LOOKUP searches for in lookupVector and can be a
            number, text, a logical value, or a name or reference to a value.
        - id: lookupVector
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is a range that contains only one row or one column of text,
            numbers, or logical values, placed in ascending order.
        - id: resultVector
          type:
            - Range | RangeReference | FunctionResult
          description: >
            Is a range that contains only one row or column, the same size as
            lookupVector.
          optional: true
      return:
        type:
          - >-
            @@microsoft/office-js.Excel.FunctionResult<number | string |
            boolean>
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.lower'
    name: lower
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts all letters in a text string to lowercase.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function lower(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the text you want to convert to lowercase. Characters in Text
            that are not letters are not changed.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.match'
    name: match
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the relative position of an item in an array that matches a
      specified value in a specified order.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function match(lookupValue: number | string | boolean | Range |
        RangeReference | FunctionResult, lookupArray: number | Range |
        RangeReference | FunctionResult, matchType?: number | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: lookupValue
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the value you use to find the value you want in the array, a
            number, text, or logical value, or a reference to one of these.
        - id: lookupArray
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a contiguous range of cells containing possible lookup values, an
            array of values, or a reference to an array.
        - id: matchType
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is a number 1, 0, or -1 indicating which value to return.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.max'
    name: max
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the largest value in a set of values. Ignores logical values and
      text.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function max(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers, empty
            cells, logical values, or text numbers for which you want the
            maximum.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.maxA'
    name: maxA
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the largest value in a set of values. Does not ignore logical
      values and text.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function maxA(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers, empty
            cells, logical values, or text numbers for which you want the
            maximum.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.mduration'
    name: mduration
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the Macauley modified duration for a security with an assumed par
      value of $100.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function mduration(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, coupon: number | string |
        boolean | Range | RangeReference | FunctionResult, yld: number | string
        | boolean | Range | RangeReference | FunctionResult, frequency: number |
        string | boolean | Range | RangeReference | FunctionResult, basis?:
        number | string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: coupon
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual coupon rate.
        - id: yld
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual yield.
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.median'
    name: median
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the median, or the number in the middle of the set of given
      numbers.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function median(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers or names,
            arrays, or references that contain numbers for which you want the
            median.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.mid'
    name: mid
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the characters from the middle of a text string, given a starting
      position and length.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function mid(text: string | Range | RangeReference | FunctionResult,
        startNum: number | Range | RangeReference | FunctionResult, numChars:
        number | Range | RangeReference | FunctionResult)
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text string from which you want to extract the characters.
        - id: startNum
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the position of the first character you want to extract. The
            first character in Text is 1.
        - id: numChars
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Specifies how many characters to return from Text.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.midb'
    name: midb
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns characters from the middle of a text string, given a starting
      position and length. Use with double-byte character sets (DBCS).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function midb(text: string | Range | RangeReference | FunctionResult,
        startNum: number | Range | RangeReference | FunctionResult, numBytes:
        number | Range | RangeReference | FunctionResult)
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text string containing the characters you want to extract.
        - id: startNum
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the position of the first character you want to extract in text.
        - id: numBytes
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Specifies how many characters to return from text.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.min'
    name: min
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the smallest number in a set of values. Ignores logical values and
      text.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function min(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers, empty
            cells, logical values, or text numbers for which you want the
            minimum.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.minA'
    name: minA
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the smallest value in a set of values. Does not ignore logical
      values and text.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function minA(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers, empty
            cells, logical values, or text numbers for which you want the
            minimum.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.minute'
    name: minute
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the minute, a number from 0 to 59.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function minute(serialNumber: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: serialNumber
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a number in the date-time code used by Microsoft Excel or text in
            time format, such as 16:48:00 or 4:48:00 PM.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.mirr'
    name: mirr
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the internal rate of return for a series of periodic cash flows,
      considering both cost of investment and interest on reinvestment of cash.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function mirr(values: Range | RangeReference | FunctionResult,
        financeRate: number | Range | RangeReference | FunctionResult,
        reinvestRate: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: values
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is an array or a reference to cells that contain numbers that
            represent a series of payments (negative) and income (positive) at
            regular periods.
        - id: financeRate
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the interest rate you pay on the money used in the cash flows.
        - id: reinvestRate
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the interest rate you receive on the cash flows as you reinvest
            them.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.mod'
    name: mod
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the remainder after a number is divided by a divisor.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function mod(number: number | Range | RangeReference | FunctionResult,
        divisor: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the number for which you want to find the remainder after the
            division is performed.
        - id: divisor
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the number by which you want to divide Number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.month'
    name: month
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the month, a number from 1 (January) to 12 (December).
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function month(serialNumber: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: serialNumber
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is a number in the date-time code used by Microsoft Excel.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.mround'
    name: mround
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a number rounded to the desired multiple.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function mround(number: number | string | boolean | Range |
        RangeReference | FunctionResult, multiple: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the value to round.
        - id: multiple
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the multiple to which you want to round number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.multiNomial'
    name: multiNomial
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the multinomial of a set of numbers.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function multiNomial(values: Array<number | string | Range | boolean |
        RangeReference | FunctionResult>)
      parameters:
        - id: values
          type:
            - >-
              Array<number | string | Range | boolean | RangeReference |
              FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 values for which you
            want the multinomial.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.n'
    name: 'n'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Converts non-number value to a number, dates to serial numbers, TRUE to 1,
      anything else to 0 (zero).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function n(value: number | string | boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the value you want converted.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.na'
    name: na
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the error value #N/A (value not available).
      [Api set: ExcelApi 1.2]
    syntax:
      content: function na()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number | string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.negBinom_Dist'
    name: negBinom_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the negative binomial distribution, the probability that there
      will be Number_f failures before the Number_s-th success, with
      Probability_s probability of a success.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function negBinom_Dist(numberF: number | Range | RangeReference |
        FunctionResult, numberS: number | Range | RangeReference |
        FunctionResult, probabilityS: number | Range | RangeReference |
        FunctionResult, cumulative: boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: numberF
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of failures.
        - id: numberS
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the threshold number of successes.
        - id: probabilityS
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the probability of a success; a number between 0 and 1.
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability mass function, use FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.networkDays'
    name: networkDays
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the number of whole workdays between two dates.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function networkDays(startDate: number | string | boolean | Range |
        RangeReference | FunctionResult, endDate: number | string | boolean |
        Range | RangeReference | FunctionResult, holidays?: number | string |
        Range | boolean | RangeReference | FunctionResult)
      parameters:
        - id: startDate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a serial date number that represents the start date.
        - id: endDate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a serial date number that represents the end date.
        - id: holidays
          type:
            - >-
              number | string | Range | boolean | RangeReference |
              FunctionResult
          description: >
            Is an optional set of one or more serial date numbers to exclude
            from the working calendar, such as state and federal holidays and
            floating holidays.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.networkDays_Intl'
    name: networkDays_Intl
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of whole workdays between two dates with custom weekend
      parameters.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function networkDays_Intl(startDate: number | string | boolean | Range |
        RangeReference | FunctionResult, endDate: number | string | boolean |
        Range | RangeReference | FunctionResult, weekend?: number | string |
        Range | RangeReference | FunctionResult, holidays?: number | string |
        Range | boolean | RangeReference | FunctionResult)
      parameters:
        - id: startDate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a serial date number that represents the start date.
        - id: endDate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a serial date number that represents the end date.
        - id: weekend
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: Is a number or string specifying when weekends occur.
          optional: true
        - id: holidays
          type:
            - >-
              number | string | Range | boolean | RangeReference |
              FunctionResult
          description: >
            Is an optional set of one or more serial date numbers to exclude
            from the working calendar, such as state and federal holidays and
            floating holidays.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.nominal'
    name: nominal
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the annual nominal interest rate.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function nominal(effectRate: number | string | boolean | Range |
        RangeReference | FunctionResult, npery: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: effectRate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the effective interest rate.
        - id: npery
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of compounding periods per year.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.norm_Dist'
    name: norm_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the normal distribution for the specified mean and standard
      deviation.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function norm_Dist(x: number | Range | RangeReference | FunctionResult,
        mean: number | Range | RangeReference | FunctionResult, standardDev:
        number | Range | RangeReference | FunctionResult, cumulative: boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value for which you want the distribution.
        - id: mean
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the arithmetic mean of the distribution.
        - id: standardDev
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is the standard deviation of the distribution, a positive number.'
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability density function, use FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.norm_Inv'
    name: norm_Inv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the inverse of the normal cumulative distribution for the
      specified mean and standard deviation.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function norm_Inv(probability: number | Range | RangeReference |
        FunctionResult, mean: number | Range | RangeReference | FunctionResult,
        standardDev: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a probability corresponding to the normal distribution, a number
            between 0 and 1 inclusive.
        - id: mean
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the arithmetic mean of the distribution.
        - id: standardDev
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the standard deviation of the distribution, a positive number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.norm_S_Dist'
    name: norm_S_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the standard normal distribution (has a mean of zero and a
      standard deviation of one).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function norm_S_Dist(z: number | Range | RangeReference |
        FunctionResult, cumulative: boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: z
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value for which you want the distribution.
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value for the function to return: the cumulative
            distribution function = TRUE; the probability density function =
            FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.norm_S_Inv'
    name: norm_S_Inv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the inverse of the standard normal cumulative distribution (has a
      mean of zero and a standard deviation of one).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function norm_S_Inv(probability: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a probability corresponding to the normal distribution, a number
            between 0 and 1 inclusive.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.not'
    name: not
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Changes FALSE to TRUE, or TRUE to FALSE.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function not(logical: boolean | Range | RangeReference | FunctionResult)'
      parameters:
        - id: logical
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: |
            Is a value or expression that can be evaluated to TRUE or FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.now'
    name: now
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the current date and time formatted as a date and time.
      [Api set: ExcelApi 1.2]
    syntax:
      content: function now()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.nper'
    name: nper
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of periods for an investment based on periodic,
      constant payments and a constant interest rate.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function nper(rate: number | Range | RangeReference | FunctionResult,
        pmt: number | Range | RangeReference | FunctionResult, pv: number |
        Range | RangeReference | FunctionResult, fv?: number | Range |
        RangeReference | FunctionResult, type?: number | Range | RangeReference
        | FunctionResult)
      parameters:
        - id: rate
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
        - id: pmt
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the payment made each period; it cannot change over the life of
            the investment.
        - id: pv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the present value, or the lump-sum amount that a series of future
            payments is worth now.
        - id: fv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the future value, or a cash balance you want to attain after the
            last payment is made. If omitted, zero is used.
          optional: true
        - id: type
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: payment at the beginning of the period = 1;
            payment at the end of the period = 0 or omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.npv'
    name: npv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the net present value of an investment based on a discount rate
      and a series of future payments (negative values) and income (positive
      values).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function npv(rate: number | Range | RangeReference | FunctionResult,
        values: Array<number | Range | RangeReference | FunctionResult>)
      parameters:
        - id: rate
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the rate of discount over the length of one period.
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 254 payments and income,
            equally spaced in time and occurring at the end of each period.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.numberValue'
    name: numberValue
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts text to number in a locale-independent manner.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function numberValue(text: string | Range | RangeReference |
        FunctionResult, decimalSeparator?: string | Range | RangeReference |
        FunctionResult, groupSeparator?: string | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the string representing the number you want to convert.
        - id: decimalSeparator
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the character used as the decimal separator in the string.
          optional: true
        - id: groupSeparator
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is the character used as the group separator in the string.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.oct2Bin'
    name: oct2Bin
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts an octal number to binary.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function oct2Bin(number: number | string | boolean | Range |
        RangeReference | FunctionResult, places?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the octal number you want to convert.
        - id: places
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of characters to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.oct2Dec'
    name: oct2Dec
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts an octal number to decimal.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function oct2Dec(number: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the octal number you want to convert.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.oct2Hex'
    name: oct2Hex
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts an octal number to hexadecimal.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function oct2Hex(number: number | string | boolean | Range |
        RangeReference | FunctionResult, places?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the octal number you want to convert.
        - id: places
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number of characters to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.odd'
    name: odd
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Rounds a positive number up and negative number down to the nearest odd
      integer.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function odd(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the value to round.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.oddFPrice'
    name: oddFPrice
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the price per $100 face value of a security with an odd first
      period.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function oddFPrice(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, issue: number | string |
        boolean | Range | RangeReference | FunctionResult, firstCoupon: number |
        string | boolean | Range | RangeReference | FunctionResult, rate: number
        | string | boolean | Range | RangeReference | FunctionResult, yld:
        number | string | boolean | Range | RangeReference | FunctionResult,
        redemption: number | string | boolean | Range | RangeReference |
        FunctionResult, frequency: number | string | boolean | Range |
        RangeReference | FunctionResult, basis?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: issue
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s issue date, expressed as a serial date number.'
        - id: firstCoupon
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's first coupon date, expressed as a serial date
            number.
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's interest rate.
        - id: yld
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual yield.
        - id: redemption
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's redemption value per $100 face value.
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.oddFYield'
    name: oddFYield
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the yield of a security with an odd first period.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function oddFYield(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, issue: number | string |
        boolean | Range | RangeReference | FunctionResult, firstCoupon: number |
        string | boolean | Range | RangeReference | FunctionResult, rate: number
        | string | boolean | Range | RangeReference | FunctionResult, pr: number
        | string | boolean | Range | RangeReference | FunctionResult,
        redemption: number | string | boolean | Range | RangeReference |
        FunctionResult, frequency: number | string | boolean | Range |
        RangeReference | FunctionResult, basis?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: issue
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s issue date, expressed as a serial date number.'
        - id: firstCoupon
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's first coupon date, expressed as a serial date
            number.
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's interest rate.
        - id: pr
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's price.
        - id: redemption
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's redemption value per $100 face value.
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.oddLPrice'
    name: oddLPrice
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the price per $100 face value of a security with an odd last
      period.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function oddLPrice(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, lastInterest: number | string |
        boolean | Range | RangeReference | FunctionResult, rate: number | string
        | boolean | Range | RangeReference | FunctionResult, yld: number |
        string | boolean | Range | RangeReference | FunctionResult, redemption:
        number | string | boolean | Range | RangeReference | FunctionResult,
        frequency: number | string | boolean | Range | RangeReference |
        FunctionResult, basis?: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: lastInterest
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's last coupon date, expressed as a serial date
            number.
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's interest rate.
        - id: yld
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual yield.
        - id: redemption
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's redemption value per $100 face value.
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.oddLYield'
    name: oddLYield
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the yield of a security with an odd last period.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function oddLYield(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, lastInterest: number | string |
        boolean | Range | RangeReference | FunctionResult, rate: number | string
        | boolean | Range | RangeReference | FunctionResult, pr: number | string
        | boolean | Range | RangeReference | FunctionResult, redemption: number
        | string | boolean | Range | RangeReference | FunctionResult, frequency:
        number | string | boolean | Range | RangeReference | FunctionResult,
        basis?: number | string | boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: lastInterest
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's last coupon date, expressed as a serial date
            number.
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's interest rate.
        - id: pr
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's price.
        - id: redemption
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's redemption value per $100 face value.
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.or'
    name: or
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks whether any of the arguments are TRUE, and returns TRUE or FALSE.
      Returns FALSE only if all arguments are FALSE.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function or(values: Array<boolean | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<boolean | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 conditions that you
            want to test that can be either TRUE or FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.pduration'
    name: pduration
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of periods required by an investment to reach a
      specified value.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function pduration(rate: number | Range | RangeReference |
        FunctionResult, pv: number | Range | RangeReference | FunctionResult,
        fv: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: rate
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the interest rate per period.
        - id: pv
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the present value of the investment.
        - id: fv
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the desired future value of the investment.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.percentile_Exc'
    name: percentile_Exc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the k-th percentile of values in a range, where k is in the range
      0..1, exclusive.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function percentile_Exc(array: number | Range | RangeReference |
        FunctionResult, k: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: array
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the array or range of data that defines relative standing.
        - id: k
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the percentile value that is between 0 through 1, inclusive.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.percentile_Inc'
    name: percentile_Inc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the k-th percentile of values in a range, where k is in the range
      0..1, inclusive.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function percentile_Inc(array: number | Range | RangeReference |
        FunctionResult, k: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: array
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the array or range of data that defines relative standing.
        - id: k
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the percentile value that is between 0 through 1, inclusive.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.percentRank_Exc'
    name: percentRank_Exc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the rank of a value in a data set as a percentage of the data set
      as a percentage (0..1, exclusive) of the data set.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function percentRank_Exc(array: number | Range | RangeReference |
        FunctionResult, x: number | Range | RangeReference | FunctionResult,
        significance?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: array
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the array or range of data with numeric values that defines
            relative standing.
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value for which you want to know the rank.
        - id: significance
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is an optional value that identifies the number of significant
            digits for the returned percentage, three digits if omitted
            (0.xxx%).
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.percentRank_Inc'
    name: percentRank_Inc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the rank of a value in a data set as a percentage of the data set
      as a percentage (0..1, inclusive) of the data set.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function percentRank_Inc(array: number | Range | RangeReference |
        FunctionResult, x: number | Range | RangeReference | FunctionResult,
        significance?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: array
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the array or range of data with numeric values that defines
            relative standing.
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value for which you want to know the rank.
        - id: significance
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is an optional value that identifies the number of significant
            digits for the returned percentage, three digits if omitted
            (0.xxx%).
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.permut'
    name: permut
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of permutations for a given number of objects that can
      be selected from the total objects.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function permut(number: number | Range | RangeReference |
        FunctionResult, numberChosen: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the total number of objects.
        - id: numberChosen
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the number of objects in each permutation.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.permutationa'
    name: permutationa
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number of permutations for a given number of objects (with
      repetitions) that can be selected from the total objects.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function permutationa(number: number | Range | RangeReference |
        FunctionResult, numberChosen: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the total number of objects.
        - id: numberChosen
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the number of objects in each permutation.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.phi'
    name: phi
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the value of the density function for a standard normal
      distribution.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function phi(x: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the number for which you want the density of the standard normal
            distribution.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.pi'
    name: pi
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the value of Pi, 3.14159265358979, accurate to 15 digits.
      [Api set: ExcelApi 1.2]
    syntax:
      content: function pi()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.pmt'
    name: pmt
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Calculates the payment for a loan based on constant payments and a
      constant interest rate.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function pmt(rate: number | Range | RangeReference | FunctionResult,
        nper: number | Range | RangeReference | FunctionResult, pv: number |
        Range | RangeReference | FunctionResult, fv?: number | Range |
        RangeReference | FunctionResult, type?: number | Range | RangeReference
        | FunctionResult)
      parameters:
        - id: rate
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the interest rate per period for the loan. For example, use 6%/4
            for quarterly payments at 6% APR.
        - id: nper
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the total number of payments for the loan.
        - id: pv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the present value: the total amount that a series of future
            payments is worth now.
        - id: fv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the future value, or a cash balance you want to attain after the
            last payment is made, 0 (zero) if omitted.
          optional: true
        - id: type
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: payment at the beginning of the period = 1;
            payment at the end of the period = 0 or omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.poisson_Dist'
    name: poisson_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the Poisson distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function poisson_Dist(x: number | Range | RangeReference |
        FunctionResult, mean: number | Range | RangeReference | FunctionResult,
        cumulative: boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of events.
        - id: mean
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is the expected numeric value, a positive number.'
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: for the cumulative Poisson probability, use
            TRUE; for the Poisson probability mass function, use FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.power'
    name: power
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the result of a number raised to a power.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function power(number: number | Range | RangeReference | FunctionResult,
        power: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is the base number, any real number.'
        - id: power
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the exponent, to which the base number is raised.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.ppmt'
    name: ppmt
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the payment on the principal for a given investment based on
      periodic, constant payments and a constant interest rate.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function ppmt(rate: number | Range | RangeReference | FunctionResult,
        per: number | Range | RangeReference | FunctionResult, nper: number |
        Range | RangeReference | FunctionResult, pv: number | Range |
        RangeReference | FunctionResult, fv?: number | Range | RangeReference |
        FunctionResult, type?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: rate
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
        - id: per
          type:
            - number | Range | RangeReference | FunctionResult
          description: Specifies the period and must be in the range 1 to nper.
        - id: nper
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the total number of payment periods in an investment.
        - id: pv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the present value: the total amount that a series of future
            payments is worth now.
        - id: fv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the future value, or cash balance you want to attain after the
            last payment is made.
          optional: true
        - id: type
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: payment at the beginning of the period = 1;
            payment at the end of the period = 0 or omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.price'
    name: price
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the price per $100 face value of a security that pays periodic
      interest.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function price(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, rate: number | string | boolean
        | Range | RangeReference | FunctionResult, yld: number | string |
        boolean | Range | RangeReference | FunctionResult, redemption: number |
        string | boolean | Range | RangeReference | FunctionResult, frequency:
        number | string | boolean | Range | RangeReference | FunctionResult,
        basis?: number | string | boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual coupon rate.
        - id: yld
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual yield.
        - id: redemption
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's redemption value per $100 face value.
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.priceDisc'
    name: priceDisc
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the price per $100 face value of a discounted security.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function priceDisc(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, discount: number | string |
        boolean | Range | RangeReference | FunctionResult, redemption: number |
        string | boolean | Range | RangeReference | FunctionResult, basis?:
        number | string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: discount
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's discount rate.
        - id: redemption
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's redemption value per $100 face value.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.priceMat'
    name: priceMat
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the price per $100 face value of a security that pays interest at
      maturity.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function priceMat(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, issue: number | string |
        boolean | Range | RangeReference | FunctionResult, rate: number | string
        | boolean | Range | RangeReference | FunctionResult, yld: number |
        string | boolean | Range | RangeReference | FunctionResult, basis?:
        number | string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: issue
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s issue date, expressed as a serial date number.'
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's interest rate at date of issue.
        - id: yld
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual yield.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.product'
    name: product
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Multiplies all the numbers given as arguments.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function product(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers, logical
            values, or text representations of numbers that you want to
            multiply.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.proper'
    name: proper
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Converts a text string to proper case; the first letter in each word to
      uppercase, and all other letters to lowercase.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function proper(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is text enclosed in quotation marks, a formula that returns text, or
            a reference to a cell containing text to partially capitalize.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.pv'
    name: pv
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the present value of an investment: the total amount that a series
      of future payments is worth now.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function pv(rate: number | Range | RangeReference | FunctionResult,
        nper: number | Range | RangeReference | FunctionResult, pmt: number |
        Range | RangeReference | FunctionResult, fv?: number | Range |
        RangeReference | FunctionResult, type?: number | Range | RangeReference
        | FunctionResult)
      parameters:
        - id: rate
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the interest rate per period. For example, use 6%/4 for quarterly
            payments at 6% APR.
        - id: nper
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the total number of payment periods in an investment.
        - id: pmt
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the payment made each period and cannot change over the life of
            the investment.
        - id: fv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the future value, or a cash balance you want to attain after the
            last payment is made.
          optional: true
        - id: type
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: payment at the beginning of the period = 1;
            payment at the end of the period = 0 or omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.quartile_Exc'
    name: quartile_Exc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the quartile of a data set, based on percentile values from 0..1,
      exclusive.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function quartile_Exc(array: number | Range | RangeReference |
        FunctionResult, quart: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: array
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the array or cell range of numeric values for which you want the
            quartile value.
        - id: quart
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a number: minimum value = 0; 1st quartile = 1; median value = 2;
            3rd quartile = 3; maximum value = 4.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.quartile_Inc'
    name: quartile_Inc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the quartile of a data set, based on percentile values from 0..1,
      inclusive.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function quartile_Inc(array: number | Range | RangeReference |
        FunctionResult, quart: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: array
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the array or cell range of numeric values for which you want the
            quartile value.
        - id: quart
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a number: minimum value = 0; 1st quartile = 1; median value = 2;
            3rd quartile = 3; maximum value = 4.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.quotient'
    name: quotient
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the integer portion of a division.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function quotient(numerator: number | string | boolean | Range |
        RangeReference | FunctionResult, denominator: number | string | boolean
        | Range | RangeReference | FunctionResult)
      parameters:
        - id: numerator
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the dividend.
        - id: denominator
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the divisor.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.radians'
    name: radians
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts degrees to radians.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function radians(angle: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: angle
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is an angle in degrees that you want to convert.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.rand'
    name: rand
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns a random number greater than or equal to 0 and less than 1, evenly
      distributed (changes on recalculation).

      [Api set: ExcelApi 1.2]
    syntax:
      content: function rand()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.randBetween'
    name: randBetween
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a random number between the numbers you specify.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function randBetween(bottom: number | string | boolean | Range |
        RangeReference | FunctionResult, top: number | string | boolean | Range
        | RangeReference | FunctionResult)
      parameters:
        - id: bottom
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the smallest integer RANDBETWEEN will return.
        - id: top
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the largest integer RANDBETWEEN will return.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.rank_Avg'
    name: rank_Avg
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the rank of a number in a list of numbers: its size relative to
      other values in the list; if more than one value has the same rank, the
      average rank is returned.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function rank_Avg(number: number | Range | RangeReference |
        FunctionResult, ref: Range | RangeReference | FunctionResult, order?:
        boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number for which you want to find the rank.
        - id: ref
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is an array of, or a reference to, a list of numbers. Nonnumeric
            values are ignored.
        - id: order
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a number: rank in the list sorted descending = 0 or omitted; rank
            in the list sorted ascending = any nonzero value.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.rank_Eq'
    name: rank_Eq
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the rank of a number in a list of numbers: its size relative to
      other values in the list; if more than one value has the same rank, the
      top rank of that set of values is returned.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function rank_Eq(number: number | Range | RangeReference |
        FunctionResult, ref: Range | RangeReference | FunctionResult, order?:
        boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number for which you want to find the rank.
        - id: ref
          type:
            - Range | RangeReference | FunctionResult
          description: >-
            Is an array of, or a reference to, a list of numbers. Nonnumeric
            values are ignored.
        - id: order
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a number: rank in the list sorted descending = 0 or omitted; rank
            in the list sorted ascending = any nonzero value.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.rate'
    name: rate
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the interest rate per period of a loan or an investment. For
      example, use 6%/4 for quarterly payments at 6% APR.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function rate(nper: number | Range | RangeReference | FunctionResult,
        pmt: number | Range | RangeReference | FunctionResult, pv: number |
        Range | RangeReference | FunctionResult, fv?: number | Range |
        RangeReference | FunctionResult, type?: number | Range | RangeReference
        | FunctionResult, guess?: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: nper
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the total number of payment periods for the loan or investment.
        - id: pmt
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the payment made each period and cannot change over the life of
            the loan or investment.
        - id: pv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the present value: the total amount that a series of future
            payments is worth now.
        - id: fv
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the future value, or a cash balance you want to attain after the
            last payment is made. If omitted, uses Fv = 0.
          optional: true
        - id: type
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a logical value: payment at the beginning of the period = 1;
            payment at the end of the period = 0 or omitted.
          optional: true
        - id: guess
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is your guess for what the rate will be; if omitted, Guess = 0.1 (10
            percent).
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.received'
    name: received
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the amount received at maturity for a fully invested security.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function received(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, investment: number | string |
        boolean | Range | RangeReference | FunctionResult, discount: number |
        string | boolean | Range | RangeReference | FunctionResult, basis?:
        number | string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: investment
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the amount invested in the security.
        - id: discount
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's discount rate.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.replace'
    name: replace
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Replaces part of a text string with a different text string.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function replace(oldText: string | Range | RangeReference |
        FunctionResult, startNum: number | Range | RangeReference |
        FunctionResult, numChars: number | Range | RangeReference |
        FunctionResult, newText: string | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: oldText
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is text in which you want to replace some characters.
        - id: startNum
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the position of the character in oldText that you want to replace
            with newText.
        - id: numChars
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of characters in oldText that you want to replace.
        - id: newText
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is the text that will replace characters in oldText.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.replaceB'
    name: replaceB
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Replaces part of a text string with a different text string. Use with
      double-byte character sets (DBCS).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function replaceB(oldText: string | Range | RangeReference |
        FunctionResult, startNum: number | Range | RangeReference |
        FunctionResult, numBytes: number | Range | RangeReference |
        FunctionResult, newText: string | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: oldText
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is text in which you want to replace some characters.
        - id: startNum
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the position of the character in oldText that you want to replace
            with newText.
        - id: numBytes
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the number of characters in oldText that you want to replace with
            newText.
        - id: newText
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is the text that will replace characters in oldText.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.rept'
    name: rept
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Repeats text a given number of times. Use REPT to fill a cell with a
      number of instances of a text string.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function rept(text: string | Range | RangeReference | FunctionResult,
        numberTimes: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text you want to repeat.
        - id: numberTimes
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is a positive number specifying the number of times to repeat text.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.right'
    name: right
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the specified number of characters from the end of a text string.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function right(text: string | Range | RangeReference | FunctionResult,
        numChars?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text string that contains the characters you want to extract.
        - id: numChars
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Specifies how many characters you want to extract, 1 if omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.rightb'
    name: rightb
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the specified number of characters from the end of a text string.
      Use with double-byte character sets (DBCS).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function rightb(text: string | Range | RangeReference | FunctionResult,
        numBytes?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text string containing the characters you want to extract.
        - id: numBytes
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Specifies how many characters you want to extract.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.roman'
    name: roman
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts an Arabic numeral to Roman, as text.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function roman(number: number | Range | RangeReference | FunctionResult,
        form?: boolean | number | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the Arabic numeral you want to convert.
        - id: form
          type:
            - boolean | number | Range | RangeReference | FunctionResult
          description: |
            Is the number specifying the type of Roman numeral you want.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.round'
    name: round
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Rounds a number to a specified number of digits.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function round(number: number | Range | RangeReference | FunctionResult,
        numDigits: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number you want to round.
        - id: numDigits
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the number of digits to which you want to round. Negative rounds
            to the left of the decimal point; zero to the nearest integer.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.roundDown'
    name: roundDown
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Rounds a number down, toward zero.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function roundDown(number: number | Range | RangeReference |
        FunctionResult, numDigits: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is any real number that you want rounded down.
        - id: numDigits
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the number of digits to which you want to round. Negative rounds
            to the left of the decimal point; zero or omitted, to the nearest
            integer.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.roundUp'
    name: roundUp
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Rounds a number up, away from zero.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function roundUp(number: number | Range | RangeReference |
        FunctionResult, numDigits: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is any real number that you want rounded up.
        - id: numDigits
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the number of digits to which you want to round. Negative rounds
            to the left of the decimal point; zero or omitted, to the nearest
            integer.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.rows'
    name: rows
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the number of rows in a reference or array.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function rows(array: Range | RangeReference | FunctionResult)'
      parameters:
        - id: array
          type:
            - Range | RangeReference | FunctionResult
          description: >
            Is an array, an array formula, or a reference to a range of cells
            for which you want the number of rows.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.rri'
    name: rri
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns an equivalent interest rate for the growth of an investment.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function rri(nper: number | Range | RangeReference | FunctionResult, pv:
        number | Range | RangeReference | FunctionResult, fv: number | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: nper
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number of periods for the investment.
        - id: pv
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the present value of the investment.
        - id: fv
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the future value of the investment.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sec'
    name: sec
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the secant of an angle.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function sec(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the angle in radians for which you want the secant.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sech'
    name: sech
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hyperbolic secant of an angle.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function sech(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the angle in radians for which you want the hyperbolic secant.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.second'
    name: second
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the second, a number from 0 to 59.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function second(serialNumber: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: serialNumber
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a number in the date-time code used by Microsoft Excel or text in
            time format, such as 16:48:23 or 4:48:47 PM.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.seriesSum'
    name: seriesSum
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the sum of a power series based on the formula.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function seriesSum(x: number | string | boolean | Range | RangeReference
        | FunctionResult, n: number | string | boolean | Range | RangeReference
        | FunctionResult, m: number | string | boolean | Range | RangeReference
        | FunctionResult, coefficients: Range | string | number | boolean |
        RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the input value to the power series.
        - id: 'n'
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the initial power to which you want to raise x.
        - id: m
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the step by which to increase n for each term in the series.
        - id: coefficients
          type:
            - >-
              Range | string | number | boolean | RangeReference |
              FunctionResult
          description: >
            Is a set of coefficients by which each successive power of x is
            multiplied.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sheet'
    name: sheet
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the sheet number of the referenced sheet.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function sheet(value?: Range | string | RangeReference | FunctionResult)'
      parameters:
        - id: value
          type:
            - Range | string | RangeReference | FunctionResult
          description: >
            Is the name of a sheet or a reference that you want the sheet number
            of.  If omitted the number of the sheet containing the function is
            returned.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sheets'
    name: sheets
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the number of sheets in a reference.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function sheets(reference?: Range | RangeReference | FunctionResult)'
      parameters:
        - id: reference
          type:
            - Range | RangeReference | FunctionResult
          description: >
            Is a reference for which you want to know the number of sheets it
            contains.  If omitted the number of sheets in the workbook
            containing the function is returned.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sign'
    name: sign
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the sign of a number: 1 if the number is positive, zero if the
      number is zero, or -1 if the number is negative.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function sign(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is any real number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sin'
    name: sin
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the sine of an angle.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function sin(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the angle in radians for which you want the sine. Degrees *
            PI()/180 = radians.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sinh'
    name: sinh
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hyperbolic sine of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function sinh(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is any real number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.skew'
    name: skew
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the skewness of a distribution: a characterization of the degree
      of asymmetry of a distribution around its mean.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function skew(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers or names,
            arrays, or references that contain numbers for which you want the
            skewness.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.skew_p'
    name: skew_p
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the skewness of a distribution based on a population: a
      characterization of the degree of asymmetry of a distribution around its
      mean.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function skew_p(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 254 numbers or names,
            arrays, or references that contain numbers for which you want the
            population skewness.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sln'
    name: sln
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the straight-line depreciation of an asset for one period.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function sln(cost: number | Range | RangeReference | FunctionResult,
        salvage: number | Range | RangeReference | FunctionResult, life: number
        | Range | RangeReference | FunctionResult)
      parameters:
        - id: cost
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the initial cost of the asset.
        - id: salvage
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the salvage value at the end of the life of the asset.
        - id: life
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the number of periods over which the asset is being depreciated
            (sometimes called the useful life of the asset).
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.small'
    name: small
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the k-th smallest value in a data set. For example, the fifth
      smallest number.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function small(array: number | Range | RangeReference | FunctionResult,
        k: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: array
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is an array or range of numerical data for which you want to
            determine the k-th smallest value.
        - id: k
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the position (from the smallest) in the array or range of the
            value to return.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sqrt'
    name: sqrt
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the square root of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function sqrt(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the number for which you want the square root.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sqrtPi'
    name: sqrtPi
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the square root of (number * Pi).
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function sqrtPi(number: number | string | boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the number by which p is multiplied.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.standardize'
    name: standardize
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns a normalized value from a distribution characterized by a mean and
      standard deviation.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function standardize(x: number | Range | RangeReference |
        FunctionResult, mean: number | Range | RangeReference | FunctionResult,
        standardDev: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value you want to normalize.
        - id: mean
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the arithmetic mean of the distribution.
        - id: standardDev
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the standard deviation of the distribution, a positive number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.stDevA'
    name: stDevA
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Estimates standard deviation based on a sample, including logical values
      and text. Text and the logical value FALSE have the value 0; the logical
      value TRUE has the value 1.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function stDevA(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 values corresponding
            to a sample of a population and can be values or names or references
            to values.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.stDevPA'
    name: stDevPA
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Calculates standard deviation based on an entire population, including
      logical values and text. Text and the logical value FALSE have the value
      0; the logical value TRUE has the value 1.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function stDevPA(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 values corresponding
            to a population and can be values, names, arrays, or references that
            contain values.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.stDev_P'
    name: stDev_P
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Calculates standard deviation based on the entire population given as
      arguments (ignores logical values and text).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function stDev_P(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers
            corresponding to a population and can be numbers or references that
            contain numbers.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.stDev_S'
    name: stDev_S
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Estimates standard deviation based on a sample (ignores logical values and
      text in the sample).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function stDev_S(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers
            corresponding to a sample of a population and can be numbers or
            references that contain numbers.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.substitute'
    name: substitute
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Replaces existing text with new text in a text string.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function substitute(text: string | Range | RangeReference |
        FunctionResult, oldText: string | Range | RangeReference |
        FunctionResult, newText: string | Range | RangeReference |
        FunctionResult, instanceNum?: string | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: >-
            Is the text or the reference to a cell containing text in which you
            want to substitute characters.
        - id: oldText
          type:
            - string | Range | RangeReference | FunctionResult
          description: >-
            Is the existing text you want to replace. If the case of oldText
            does not match the case of text, SUBSTITUTE will not replace the
            text.
        - id: newText
          type:
            - string | Range | RangeReference | FunctionResult
          description: Is the text you want to replace oldText with.
        - id: instanceNum
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Specifies which occurrence of oldText you want to replace. If
            omitted, every instance of oldText is replaced.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.subtotal'
    name: subtotal
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a subtotal in a list or database.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function subtotal(functionNum: number | Range | RangeReference |
        FunctionResult, values: Array<Range | RangeReference | FunctionResult>)
      parameters:
        - id: functionNum
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the number 1 to 11 that specifies the summary function for the
            subtotal.
        - id: values
          type:
            - Array<Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 254 ranges or references
            for which you want the subtotal.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sum'
    name: sum
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Adds all the numbers in a range of cells.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function sum(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers to sum.
            Logical values and text are ignored in cells, included if typed as
            arguments.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sumIf'
    name: sumIf
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Adds the cells specified by a given condition or criteria.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function sumIf(range: Range | RangeReference | FunctionResult, criteria:
        number | string | boolean | Range | RangeReference | FunctionResult,
        sumRange?: Range | RangeReference | FunctionResult)
      parameters:
        - id: range
          type:
            - Range | RangeReference | FunctionResult
          description: Is the range of cells you want evaluated.
        - id: criteria
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the condition or criteria in the form of a number, expression, or
            text that defines which cells will be added.
        - id: sumRange
          type:
            - Range | RangeReference | FunctionResult
          description: >
            Are the actual cells to sum. If omitted, the cells in range are
            used.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sumIfs'
    name: sumIfs
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Adds the cells specified by a given set of conditions or criteria.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function sumIfs(sumRange: Range | RangeReference | FunctionResult,
        values: Array<Range | RangeReference | FunctionResult | number | string
        | boolean>)
      parameters:
        - id: sumRange
          type:
            - Range | RangeReference | FunctionResult
          description: Are the actual cells to sum.
        - id: values
          type:
            - >-
              Array<Range | RangeReference | FunctionResult | number | string |
              boolean>
          description: >
            List of parameters, where the first element of each pair is the Is
            the range of cells you want evaluated for the particular condition ,
            and the second element is is the condition or criteria in the form
            of a number, expression, or text that defines which cells will be
            added.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.sumSq'
    name: sumSq
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the sum of the squares of the arguments. The arguments can be
      numbers, arrays, names, or references to cells that contain numbers.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function sumSq(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numbers, arrays,
            names, or references to arrays for which you want the sum of the
            squares.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.syd'
    name: syd
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the sum-of-years' digits depreciation of an asset for a specified
      period.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function syd(cost: number | Range | RangeReference | FunctionResult,
        salvage: number | Range | RangeReference | FunctionResult, life: number
        | Range | RangeReference | FunctionResult, per: number | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: cost
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the initial cost of the asset.
        - id: salvage
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the salvage value at the end of the life of the asset.
        - id: life
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the number of periods over which the asset is being depreciated
            (sometimes called the useful life of the asset).
        - id: per
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the period and must use the same units as Life.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.t'
    name: t
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Checks whether a value is text, and returns the text if it is, or returns
      double quotes (empty text) if it is not.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function t(value: number | string | boolean | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the value to test.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.tan'
    name: tan
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the tangent of an angle.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function tan(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the angle in radians for which you want the tangent. Degrees *
            PI()/180 = radians.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.tanh'
    name: tanh
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the hyperbolic tangent of a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function tanh(number: number | Range | RangeReference | FunctionResult)'
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is any real number.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.tbillEq'
    name: tbillEq
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the bond-equivalent yield for a treasury bill.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function tbillEq(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, discount: number | string |
        boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the Treasury bill's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the Treasury bill's maturity date, expressed as a serial date
            number.
        - id: discount
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the Treasury bill's discount rate.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.tbillPrice'
    name: tbillPrice
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the price per $100 face value for a treasury bill.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function tbillPrice(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, discount: number | string |
        boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the Treasury bill's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the Treasury bill's maturity date, expressed as a serial date
            number.
        - id: discount
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the Treasury bill's discount rate.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.tbillYield'
    name: tbillYield
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the yield for a treasury bill.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function tbillYield(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, pr: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the Treasury bill's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the Treasury bill's maturity date, expressed as a serial date
            number.
        - id: pr
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the Treasury Bill's price per $100 face value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.text'
    name: text
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a value to text in a specific number format.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function text(value: number | string | boolean | Range | RangeReference
        | FunctionResult, formatText: string | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is a number, a formula that evaluates to a numeric value, or a
            reference to a cell containing a numeric value.
        - id: formatText
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is a number format in text form from the Category box on the Number
            tab in the Format Cells dialog box (not General).
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.time'
    name: time
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Converts hours, minutes, and seconds given as numbers to an Excel serial
      number, formatted with a time format.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function time(hour: number | Range | RangeReference | FunctionResult,
        minute: number | Range | RangeReference | FunctionResult, second: number
        | Range | RangeReference | FunctionResult)
      parameters:
        - id: hour
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is a number from 0 to 23 representing the hour.
        - id: minute
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is a number from 0 to 59 representing the minute.
        - id: second
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is a number from 0 to 59 representing the second.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.timevalue'
    name: timevalue
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Converts a text time to an Excel serial number for a time, a number from 0
      (12:00:00 AM) to 0.999988426 (11:59:59 PM). Format the number with a time
      format after entering the formula.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function timevalue(timeText: string | number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: timeText
          type:
            - string | number | Range | RangeReference | FunctionResult
          description: >
            Is a text string that gives a time in any one of the Microsoft Excel
            time formats (date information in the string is ignored).
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.today'
    name: today
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the current date formatted as a date.
      [Api set: ExcelApi 1.2]
    syntax:
      content: function today()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.toJSON'
    name: toJSON
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toJSON()
      parameters: []
      return:
        type:
          - __type
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.trim'
    name: trim
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Removes all spaces from a text string except for single spaces between
      words.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function trim(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is the text from which you want spaces removed.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.trimMean'
    name: trimMean
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the mean of the interior portion of a set of data values.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function trimMean(array: number | Range | RangeReference |
        FunctionResult, percent: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: array
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the range or array of values to trim and average.
        - id: percent
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the fractional number of data points to exclude from the top and
            bottom of the data set.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.true'
    name: 'true'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the logical value TRUE.
      [Api set: ExcelApi 1.2]
    syntax:
      content: function true()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.trunc'
    name: trunc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Truncates a number to an integer by removing the decimal, or fractional,
      part of the number.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function trunc(number: number | Range | RangeReference | FunctionResult,
        numDigits?: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the number you want to truncate.
        - id: numDigits
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a number specifying the precision of the truncation, 0 (zero) if
            omitted.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.type'
    name: type
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns an integer representing the data type of a value: number = 1; text
      = 2; logical value = 4; error value = 16; array = 64.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function type(value: boolean | string | number | Range | RangeReference
        | FunctionResult)
      parameters:
        - id: value
          type:
            - >-
              boolean | string | number | Range | RangeReference |
              FunctionResult
          description: |
            Can be any value.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.t_Dist'
    name: t_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the left-tailed Student's t-distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function t_Dist(x: number | Range | RangeReference | FunctionResult,
        degFreedom: number | Range | RangeReference | FunctionResult,
        cumulative: boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the numeric value at which to evaluate the distribution.
        - id: degFreedom
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is an integer indicating the number of degrees of freedom that
            characterize the distribution.
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability density function, use FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.t_Dist_2T'
    name: t_Dist_2T
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the two-tailed Student's t-distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function t_Dist_2T(x: number | Range | RangeReference | FunctionResult,
        degFreedom: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the numeric value at which to evaluate the distribution.
        - id: degFreedom
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is an integer indicating the number of degrees of freedom that
            characterize the distribution.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.t_Dist_RT'
    name: t_Dist_RT
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the right-tailed Student's t-distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function t_Dist_RT(x: number | Range | RangeReference | FunctionResult,
        degFreedom: number | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the numeric value at which to evaluate the distribution.
        - id: degFreedom
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is an integer indicating the number of degrees of freedom that
            characterize the distribution.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.t_Inv'
    name: t_Inv
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the left-tailed inverse of the Student's t-distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function t_Inv(probability: number | Range | RangeReference |
        FunctionResult, degFreedom: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the probability associated with the two-tailed Student's
            t-distribution, a number between 0 and 1 inclusive.
        - id: degFreedom
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a positive integer indicating the number of degrees of freedom to
            characterize the distribution.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.t_Inv_2T'
    name: t_Inv_2T
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the two-tailed inverse of the Student's t-distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function t_Inv_2T(probability: number | Range | RangeReference |
        FunctionResult, degFreedom: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: probability
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the probability associated with the two-tailed Student's
            t-distribution, a number between 0 and 1 inclusive.
        - id: degFreedom
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a positive integer indicating the number of degrees of freedom to
            characterize the distribution.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.unichar'
    name: unichar
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the Unicode character referenced by the given numeric value.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function unichar(number: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the Unicode number representing a character.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.unicode'
    name: unicode
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the number (code point) corresponding to the first character of
      the text.

      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function unicode(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: |
            Is the character that you want the Unicode value of.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.upper'
    name: upper
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a text string to all uppercase letters.
      [Api set: ExcelApi 1.2]
    syntax:
      content: 'function upper(text: string | Range | RangeReference | FunctionResult)'
      parameters:
        - id: text
          type:
            - string | Range | RangeReference | FunctionResult
          description: >
            Is the text you want converted to uppercase, a reference or a text
            string.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.usdollar'
    name: usdollar
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a number to text, using currency format.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function usdollar(number: number | Range | RangeReference |
        FunctionResult, decimals?: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: number
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is a number, a reference to a cell containing a number, or a formula
            that evaluates to a number.
        - id: decimals
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is the number of digits to the right of the decimal point.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<string>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.value'
    name: value
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Converts a text string that represents a number to a number.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function value(text: string | boolean | number | Range | RangeReference
        | FunctionResult)
      parameters:
        - id: text
          type:
            - >-
              string | boolean | number | Range | RangeReference |
              FunctionResult
          description: >
            Is the text enclosed in quotation marks or a reference to a cell
            containing the text you want to convert.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.varA'
    name: varA
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Estimates variance based on a sample, including logical values and text.
      Text and the logical value FALSE have the value 0; the logical value TRUE
      has the value 1.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function varA(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 value arguments
            corresponding to a sample of a population.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.varPA'
    name: varPA
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Calculates variance based on the entire population, including logical
      values and text. Text and the logical value FALSE have the value 0; the
      logical value TRUE has the value 1.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function varPA(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 value arguments
            corresponding to a population.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.var_P'
    name: var_P
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Calculates variance based on the entire population (ignores logical values
      and text in the population).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function var_P(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numeric arguments
            corresponding to a population.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.var_S'
    name: var_S
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Estimates variance based on a sample (ignores logical values and text in
      the sample).

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function var_S(values: Array<number | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<number | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 255 numeric arguments
            corresponding to a sample of a population.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.vdb'
    name: vdb
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the depreciation of an asset for any period you specify, including
      partial periods, using the double-declining balance method or some other
      method you specify.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function vdb(cost: number | Range | RangeReference | FunctionResult,
        salvage: number | Range | RangeReference | FunctionResult, life: number
        | Range | RangeReference | FunctionResult, startPeriod: number | Range |
        RangeReference | FunctionResult, endPeriod: number | Range |
        RangeReference | FunctionResult, factor?: number | Range |
        RangeReference | FunctionResult, noSwitch?: boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: cost
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the initial cost of the asset.
        - id: salvage
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the salvage value at the end of the life of the asset.
        - id: life
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the number of periods over which the asset is being depreciated
            (sometimes called the useful life of the asset).
        - id: startPeriod
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the starting period for which you want to calculate the
            depreciation, in the same units as Life.
        - id: endPeriod
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the ending period for which you want to calculate the
            depreciation, in the same units as Life.
        - id: factor
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the rate at which the balance declines, 2 (double-declining
            balance) if omitted.
          optional: true
        - id: noSwitch
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Switch to straight-line depreciation when depreciation is greater
            than the declining balance = FALSE or omitted; do not switch = TRUE.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.vlookup'
    name: vlookup
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Looks for a value in the leftmost column of a table, and then returns a
      value in the same row from a column you specify. By default, the table
      must be sorted in an ascending order.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function vlookup(lookupValue: number | string | boolean | Range |
        RangeReference | FunctionResult, tableArray: Range | number |
        RangeReference | FunctionResult, colIndexNum: Range | number |
        RangeReference | FunctionResult, rangeLookup?: boolean | Range |
        RangeReference | FunctionResult)
      parameters:
        - id: lookupValue
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the value to be found in the first column of the table, and can
            be a value, a reference, or a text string.
        - id: tableArray
          type:
            - Range | number | RangeReference | FunctionResult
          description: >-
            Is a table of text, numbers, or logical values, in which data is
            retrieved. tableArray can be a reference to a range or a range name.
        - id: colIndexNum
          type:
            - Range | number | RangeReference | FunctionResult
          description: >-
            Is the column number in tableArray from which the matching value
            should be returned. The first column of values in the table is
            column 1.
        - id: rangeLookup
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: to find the closest match in the first column
            (sorted in ascending order) = TRUE or omitted; find an exact match =
            FALSE.
          optional: true
      return:
        type:
          - >-
            @@microsoft/office-js.Excel.FunctionResult<number | string |
            boolean>
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.weekday'
    name: weekday
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a number from 1 to 7 identifying the day of the week of a date.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function weekday(serialNumber: number | Range | RangeReference |
        FunctionResult, returnType?: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: serialNumber
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is a number that represents a date.
        - id: returnType
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is a number: for Sunday=1 through Saturday=7, use 1; for Monday=1
            through Sunday=7, use 2; for Monday=0 through Sunday=6, use 3.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.weekNum'
    name: weekNum
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the week number in the year.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function weekNum(serialNumber: number | string | boolean | Range |
        RangeReference | FunctionResult, returnType?: number | string | boolean
        | Range | RangeReference | FunctionResult)
      parameters:
        - id: serialNumber
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the date-time code used by Microsoft Excel for date and time
            calculation.
        - id: returnType
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a number (1 or 2) that determines the type of the return value.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.weibull_Dist'
    name: weibull_Dist
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the Weibull distribution.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function weibull_Dist(x: number | Range | RangeReference |
        FunctionResult, alpha: number | Range | RangeReference | FunctionResult,
        beta: number | Range | RangeReference | FunctionResult, cumulative:
        boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: >-
            Is the value at which to evaluate the function, a nonnegative
            number.
        - id: alpha
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is a parameter to the distribution, a positive number.'
        - id: beta
          type:
            - number | Range | RangeReference | FunctionResult
          description: 'Is a parameter to the distribution, a positive number.'
        - id: cumulative
          type:
            - boolean | Range | RangeReference | FunctionResult
          description: >
            Is a logical value: for the cumulative distribution function, use
            TRUE; for the probability mass function, use FALSE.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.workDay'
    name: workDay
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the serial number of the date before or after a specified number
      of workdays.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function workDay(startDate: number | string | boolean | Range |
        RangeReference | FunctionResult, days: number | string | boolean | Range
        | RangeReference | FunctionResult, holidays?: number | string | Range |
        boolean | RangeReference | FunctionResult)
      parameters:
        - id: startDate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a serial date number that represents the start date.
        - id: days
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the number of nonweekend and non-holiday days before or after
            startDate.
        - id: holidays
          type:
            - >-
              number | string | Range | boolean | RangeReference |
              FunctionResult
          description: >
            Is an optional array of one or more serial date numbers to exclude
            from the working calendar, such as state and federal holidays and
            floating holidays.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.workDay_Intl'
    name: workDay_Intl
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the serial number of the date before or after a specified number
      of workdays with custom weekend parameters.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function workDay_Intl(startDate: number | string | boolean | Range |
        RangeReference | FunctionResult, days: number | string | boolean | Range
        | RangeReference | FunctionResult, weekend?: number | string | Range |
        RangeReference | FunctionResult, holidays?: number | string | Range |
        boolean | RangeReference | FunctionResult)
      parameters:
        - id: startDate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a serial date number that represents the start date.
        - id: days
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the number of nonweekend and non-holiday days before or after
            startDate.
        - id: weekend
          type:
            - number | string | Range | RangeReference | FunctionResult
          description: Is a number or string specifying when weekends occur.
          optional: true
        - id: holidays
          type:
            - >-
              number | string | Range | boolean | RangeReference |
              FunctionResult
          description: >
            Is an optional array of one or more serial date numbers to exclude
            from the working calendar, such as state and federal holidays and
            floating holidays.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.xirr'
    name: xirr
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the internal rate of return for a schedule of cash flows.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function xirr(values: number | string | Range | boolean | RangeReference
        | FunctionResult, dates: number | string | Range | boolean |
        RangeReference | FunctionResult, guess?: number | string | boolean |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: values
          type:
            - >-
              number | string | Range | boolean | RangeReference |
              FunctionResult
          description: >-
            Is a series of cash flows that correspond to a schedule of payments
            in dates.
        - id: dates
          type:
            - >-
              number | string | Range | boolean | RangeReference |
              FunctionResult
          description: >-
            Is a schedule of payment dates that corresponds to the cash flow
            payments.
        - id: guess
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is a number that you guess is close to the result of XIRR.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.xnpv'
    name: xnpv
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the net present value for a schedule of cash flows.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function xnpv(rate: number | string | boolean | Range | RangeReference |
        FunctionResult, values: number | string | Range | boolean |
        RangeReference | FunctionResult, dates: number | string | Range |
        boolean | RangeReference | FunctionResult)
      parameters:
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the discount rate to apply to the cash flows.
        - id: values
          type:
            - >-
              number | string | Range | boolean | RangeReference |
              FunctionResult
          description: >-
            Is a series of cash flows that correspond to a schedule of payments
            in dates.
        - id: dates
          type:
            - >-
              number | string | Range | boolean | RangeReference |
              FunctionResult
          description: >
            Is a schedule of payment dates that corresponds to the cash flow
            payments.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.xor'
    name: xor
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns a logical 'Exclusive Or' of all arguments.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function xor(values: Array<boolean | Range | RangeReference |
        FunctionResult>)
      parameters:
        - id: values
          type:
            - Array<boolean | Range | RangeReference | FunctionResult>
          description: >
            List of parameters, whose elements are 1 to 254 conditions you want
            to test that can be either TRUE or FALSE and can be logical values,
            arrays, or references.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<boolean>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.year'
    name: year
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the year of a date, an integer in the range 1900 - 9999.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function year(serialNumber: number | Range | RangeReference |
        FunctionResult)
      parameters:
        - id: serialNumber
          type:
            - number | Range | RangeReference | FunctionResult
          description: |
            Is a number in the date-time code used by Microsoft Excel.
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.yearFrac'
    name: yearFrac
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the year fraction representing the number of whole days between
      start_date and end_date.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function yearFrac(startDate: number | string | boolean | Range |
        RangeReference | FunctionResult, endDate: number | string | boolean |
        Range | RangeReference | FunctionResult, basis?: number | string |
        boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: startDate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a serial date number that represents the start date.
        - id: endDate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is a serial date number that represents the end date.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.yield'
    name: yield
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the yield on a security that pays periodic interest.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function yield(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, rate: number | string | boolean
        | Range | RangeReference | FunctionResult, pr: number | string | boolean
        | Range | RangeReference | FunctionResult, redemption: number | string |
        boolean | Range | RangeReference | FunctionResult, frequency: number |
        string | boolean | Range | RangeReference | FunctionResult, basis?:
        number | string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's annual coupon rate.
        - id: pr
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's price per $100 face value.
        - id: redemption
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's redemption value per $100 face value.
        - id: frequency
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the number of coupon payments per year.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.yieldDisc'
    name: yieldDisc
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns the annual yield for a discounted security. For example, a
      treasury bill.

      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function yieldDisc(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, pr: number | string | boolean |
        Range | RangeReference | FunctionResult, redemption: number | string |
        boolean | Range | RangeReference | FunctionResult, basis?: number |
        string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: pr
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's price per $100 face value.
        - id: redemption
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's redemption value per $100 face value.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.yieldMat'
    name: yieldMat
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the annual yield of a security that pays interest at maturity.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function yieldMat(settlement: number | string | boolean | Range |
        RangeReference | FunctionResult, maturity: number | string | boolean |
        Range | RangeReference | FunctionResult, issue: number | string |
        boolean | Range | RangeReference | FunctionResult, rate: number | string
        | boolean | Range | RangeReference | FunctionResult, pr: number | string
        | boolean | Range | RangeReference | FunctionResult, basis?: number |
        string | boolean | Range | RangeReference | FunctionResult)
      parameters:
        - id: settlement
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: >-
            Is the security's settlement date, expressed as a serial date
            number.
        - id: maturity
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s maturity date, expressed as a serial date number.'
        - id: issue
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: 'Is the security''s issue date, expressed as a serial date number.'
        - id: rate
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's interest rate at date of issue.
        - id: pr
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: Is the security's price per $100 face value.
        - id: basis
          type:
            - >-
              number | string | boolean | Range | RangeReference |
              FunctionResult
          description: |
            Is the type of day count basis to use.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
  - uid: '@microsoft/office-js.Excel.Functions.z_Test'
    name: z_Test
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns the one-tailed P-value of a z-test.
      [Api set: ExcelApi 1.2]
    syntax:
      content: >-
        function z_Test(array: number | Range | RangeReference | FunctionResult,
        x: number | Range | RangeReference | FunctionResult, sigma?: number |
        Range | RangeReference | FunctionResult)
      parameters:
        - id: array
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the array or range of data against which to test X.
        - id: x
          type:
            - number | Range | RangeReference | FunctionResult
          description: Is the value to test.
        - id: sigma
          type:
            - number | Range | RangeReference | FunctionResult
          description: >
            Is the population (known) standard deviation. If omitted, the sample
            standard deviation is used.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Excel.FunctionResult<number>'
    module: Excel
