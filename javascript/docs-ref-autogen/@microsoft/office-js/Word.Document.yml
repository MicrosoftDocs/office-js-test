### YamlMime:UniversalReference
items:
  - uid: '@microsoft/office-js.Word.Document'
    name: Document
    fullName: Document
    children:
      - '@microsoft/office-js.Word.Document.body'
      - '@microsoft/office-js.Word.Document.contentControls'
      - '@microsoft/office-js.Word.Document.getSelection'
      - '@microsoft/office-js.Word.Document.load'
      - '@microsoft/office-js.Word.Document.properties'
      - '@microsoft/office-js.Word.Document.save'
      - '@microsoft/office-js.Word.Document.saved'
      - '@microsoft/office-js.Word.Document.sections'
      - '@microsoft/office-js.Word.Document.set'
      - '@microsoft/office-js.Word.Document.set_1'
      - '@microsoft/office-js.Word.Document.toJSON'
      - '@microsoft/office-js.Word.Document.track'
      - '@microsoft/office-js.Word.Document.untrack'
    langs:
      - typeScript
    type: class
    summary: >
      The Document object is the top level object. A Document object contains
      one or more sections, content controls, and the body that contains the
      contents of the document.

      [Api set: WordApi 1.1]
    extends:
      name: '@@microsoft/office-js.OfficeExtension.ClientObject'
    source:
      path: office.d.ts
      startLine: 15236
      remote:
        path: dist\office.d.ts
        repo: 'https://github.com/OfficeDev/office-js.git'
        branch: master
    package: '@microsoft/office-js'
    module: Word
  - uid: '@microsoft/office-js.Word.Document.body'
    name: body
    fullName: body
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the body object of the document. The body is the text that excludes
      headers, footers, footnotes, textboxes, etc.. Read-only.

      [Api set: WordApi 1.1]
    syntax:
      content: Body body
      return:
        type:
          - '@@microsoft/office-js.Word.Body'
    module: Word
  - uid: '@microsoft/office-js.Word.Document.contentControls'
    name: contentControls
    fullName: contentControls
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the collection of content control objects in the current document.
      This includes content controls in the body of the document, headers,
      footers, textboxes, etc.. Read-only.

      [Api set: WordApi 1.1]
    syntax:
      content: ContentControlCollection contentControls
      return:
        type:
          - '@@microsoft/office-js.Word.ContentControlCollection'
    module: Word
  - uid: '@microsoft/office-js.Word.Document.getSelection'
    name: getSelection
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Gets the current selection of the document. Multiple selections are not
      supported.

      [Api set: WordApi 1.1]
    syntax:
      content: function getSelection()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.Range'
    module: Word
  - uid: '@microsoft/office-js.Word.Document.load'
    name: load
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call "context.sync()" before reading the properties.
    syntax:
      content: 'function load(option?: string |  | LoadOption)'
      parameters:
        - id: option
          type:
            - string |  | LoadOption
          description: ''
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Word.Document'
    module: Word
  - uid: '@microsoft/office-js.Word.Document.properties'
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets the properties of the current document. Read-only.
      [Api set: WordApi 1.3]
    syntax:
      content: DocumentProperties properties
      return:
        type:
          - '@@microsoft/office-js.Word.DocumentProperties'
    module: Word
  - uid: '@microsoft/office-js.Word.Document.save'
    name: save
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Saves the document. This will use the Word default file naming convention
      if the document has not been saved before.

      [Api set: WordApi 1.1]
    syntax:
      content: function save()
      parameters: []
    module: Word
  - uid: '@microsoft/office-js.Word.Document.saved'
    name: saved
    fullName: saved
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Indicates whether the changes in the document have been saved. A value of
      true indicates that the document hasn't changed since it was saved.
      Read-only.

      [Api set: WordApi 1.1]
    syntax:
      content: boolean saved
      return:
        type:
          - boolean
    module: Word
  - uid: '@microsoft/office-js.Word.Document.sections'
    name: sections
    fullName: sections
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets the collection of section objects in the document. Read-only.
      [Api set: WordApi 1.1]
    syntax:
      content: SectionCollection sections
      return:
        type:
          - '@@microsoft/office-js.Word.SectionCollection'
    module: Word
  - uid: '@microsoft/office-js.Word.Document.set'
    name: set
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets multiple properties on the object at the same time, based on JSON
      input.
    syntax:
      content: 'function set(properties: DocumentUpdateData, options?: function)'
      parameters:
        - id: properties
          type:
            - '@@microsoft/office-js.Word.Word.Interfaces.DocumentUpdateData'
          description: ''
        - id: options
          type:
            - function
          description: ''
          optional: true
    module: Word
  - uid: '@microsoft/office-js.Word.Document.set_1'
    name: set
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets multiple properties on the object at the same time, based on JSON
      input.
    syntax:
      content: 'function set(properties: Document)'
      parameters:
        - id: properties
          type:
            - '@@microsoft/office-js.Word.Document'
          description: ''
    module: Word
  - uid: '@microsoft/office-js.Word.Document.toJSON'
    name: toJSON
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toJSON()
      parameters: []
      return:
        type:
          - function
    module: Word
  - uid: '@microsoft/office-js.Word.Document.track'
    name: track
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      context.trackedObjects.add(thisObject). If you are using this object
      across ".sync" calls and outside the sequential execution of a ".run"
      batch, and get an "InvalidObjectPath" error when setting a property or
      invoking a method on the object, you needed to have added the object to
      the tracked object collection when the object was first created.
    syntax:
      content: function track()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.Document'
    module: Word
  - uid: '@microsoft/office-js.Word.Document.untrack'
    name: untrack
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects
      slows down the host application, so please remember to free any objects
      you add, once you're done using them. You will need to call
      "context.sync()" before the memory release takes effect.
    syntax:
      content: function untrack()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.Document'
    module: Word
