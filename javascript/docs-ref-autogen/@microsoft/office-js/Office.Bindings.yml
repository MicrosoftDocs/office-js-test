### YamlMime:UniversalReference
items:
  - uid: '@microsoft/office-js.Office.Bindings'
    name: Bindings
    fullName: Bindings
    children:
      - '@microsoft/office-js.Office.Bindings.addFromNamedItemAsync'
      - '@microsoft/office-js.Office.Bindings.addFromPromptAsync'
      - '@microsoft/office-js.Office.Bindings.addFromSelectionAsync'
      - '@microsoft/office-js.Office.Bindings.document'
      - '@microsoft/office-js.Office.Bindings.getAllAsync'
      - '@microsoft/office-js.Office.Bindings.getByIdAsync'
      - '@microsoft/office-js.Office.Bindings.releaseByIdAsync'
    langs:
      - typeScript
    type: interface
    summary: ''
    source:
      path: office.d.ts
      startLine: 436
      remote:
        path: dist\office.d.ts
        repo: 'https://github.com/OfficeDev/office-js.git'
        branch: master
    package: '@microsoft/office-js'
    module: Office
  - uid: '@microsoft/office-js.Office.Bindings.addFromNamedItemAsync'
    name: addFromNamedItemAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a binding against a named object in the document
    syntax:
      content: >-
        function addFromNamedItemAsync(itemName: string, bindingType:
        BindingType, options?: any, callback?: (result: AsyncResult) => void)
      parameters:
        - id: itemName
          type:
            - string
          description: >-
            Name of the bindable object in the document. For Example
            'MyExpenses' table in Excel."
        - id: bindingType
          type:
            - '@@microsoft/office-js.Office.BindingType'
          description: The Office BindingType for the data
        - id: options
          type:
            - any
          description: |-
            Syntax example: {id: "BindingID"}
                  id: Name of the binding, autogenerated if not supplied.
                  asyncContext: Object keeping state for the callback
                  columns: The string[] of the columns involved in the binding
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: |
            The optional callback method
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.Bindings.addFromPromptAsync'
    name: addFromPromptAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create a binding by prompting the user to make a selection on the
      document.
    syntax:
      content: >-
        function addFromPromptAsync(bindingType: BindingType, options?: any,
        callback?: (result: AsyncResult) => void)
      parameters:
        - id: bindingType
          type:
            - '@@microsoft/office-js.Office.BindingType'
          description: The Office BindingType for the data
        - id: options
          type:
            - any
          description: >-
            addFromPromptAsyncOptions- e.g. {promptText: "Please select data",
            id: "mySales"}
                  promptText: Greet your users with a friendly word.
                  asyncContext: Object keeping state for the callback
                  id: Identifier.
                  sampleData: A TableData that gives sample table in the Dialog.TableData.Headers is [][] of string.
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: |
            The optional callback method
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.Bindings.addFromSelectionAsync'
    name: addFromSelectionAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a binding based on what the user's current selection.
    syntax:
      content: >-
        function addFromSelectionAsync(bindingType: BindingType, options?: any,
        callback?: (result: AsyncResult) => void)
      parameters:
        - id: bindingType
          type:
            - '@@microsoft/office-js.Office.BindingType'
          description: The Office BindingType for the data
        - id: options
          type:
            - any
          description: |-
            addFromSelectionAsyncOptions- e.g. {id: "BindingID"}
                  id: Identifier.
                  asyncContext: Object keeping state for the callback
                  columns: The string[] of the columns involved in the binding
                  sampleData: A TableData that gives sample table in the Dialog.TableData.Headers is [][] of string.
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: |
            The optional callback method
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.Bindings.document'
    name: document
    fullName: document
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Document document
      return:
        type:
          - '@@microsoft/office-js.Office.Document'
    module: Office
  - uid: '@microsoft/office-js.Office.Bindings.getAllAsync'
    name: getAllAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets an array with all the binding objects in the document.
    syntax:
      content: >-
        function getAllAsync(options?: any, callback?: (result: AsyncResult) =>
        void)
      parameters:
        - id: options
          type:
            - any
          description: |-
            Syntax example: {asyncContext:context}
                  asyncContext: Object keeping state for the callback
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: |
            The optional callback method
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.Bindings.getByIdAsync'
    name: getByIdAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: Retrieves a binding based on its Name
    syntax:
      content: >-
        function getByIdAsync(id: string, options?: any, callback?: (result:
        AsyncResult) => void)
      parameters:
        - id: id
          type:
            - string
          description: The binding id
        - id: options
          type:
            - any
          description: |-
            Syntax example: {asyncContext:context}
                  asyncContext: Object keeping state for the callback
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: |
            The optional callback method
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.Bindings.releaseByIdAsync'
    name: releaseByIdAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes the binding from the document
    syntax:
      content: >-
        function releaseByIdAsync(id: string, options?: any, callback?: (result:
        AsyncResult) => void)
      parameters:
        - id: id
          type:
            - string
          description: The binding id
        - id: options
          type:
            - any
          description: |-
            Syntax example: {asyncContext:context}
                  asyncContext: Object keeping state for the callback
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: |
            The optional callback method
          optional: true
    module: Office
