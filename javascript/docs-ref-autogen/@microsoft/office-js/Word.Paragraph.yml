### YamlMime:UniversalReference
items:
  - uid: '@microsoft/office-js.Word.Paragraph'
    name: Paragraph
    fullName: Paragraph
    children:
      - '@microsoft/office-js.Word.Paragraph.alignment'
      - '@microsoft/office-js.Word.Paragraph.attachToList'
      - '@microsoft/office-js.Word.Paragraph.clear'
      - '@microsoft/office-js.Word.Paragraph.contentControls'
      - '@microsoft/office-js.Word.Paragraph.delete'
      - '@microsoft/office-js.Word.Paragraph.detachFromList'
      - '@microsoft/office-js.Word.Paragraph.firstLineIndent'
      - '@microsoft/office-js.Word.Paragraph.font'
      - '@microsoft/office-js.Word.Paragraph.getHtml'
      - '@microsoft/office-js.Word.Paragraph.getNext'
      - '@microsoft/office-js.Word.Paragraph.getNextOrNullObject'
      - '@microsoft/office-js.Word.Paragraph.getOoxml'
      - '@microsoft/office-js.Word.Paragraph.getPrevious'
      - '@microsoft/office-js.Word.Paragraph.getPreviousOrNullObject'
      - '@microsoft/office-js.Word.Paragraph.getRange'
      - '@microsoft/office-js.Word.Paragraph.getTextRanges'
      - '@microsoft/office-js.Word.Paragraph.inlinePictures'
      - '@microsoft/office-js.Word.Paragraph.insertBreak'
      - '@microsoft/office-js.Word.Paragraph.insertContentControl'
      - '@microsoft/office-js.Word.Paragraph.insertFileFromBase64'
      - '@microsoft/office-js.Word.Paragraph.insertHtml'
      - '@microsoft/office-js.Word.Paragraph.insertInlinePictureFromBase64'
      - '@microsoft/office-js.Word.Paragraph.insertOoxml'
      - '@microsoft/office-js.Word.Paragraph.insertParagraph'
      - '@microsoft/office-js.Word.Paragraph.insertTable'
      - '@microsoft/office-js.Word.Paragraph.insertText'
      - '@microsoft/office-js.Word.Paragraph.isLastParagraph'
      - '@microsoft/office-js.Word.Paragraph.isListItem'
      - '@microsoft/office-js.Word.Paragraph.leftIndent'
      - '@microsoft/office-js.Word.Paragraph.lineSpacing'
      - '@microsoft/office-js.Word.Paragraph.lineUnitAfter'
      - '@microsoft/office-js.Word.Paragraph.lineUnitBefore'
      - '@microsoft/office-js.Word.Paragraph.list'
      - '@microsoft/office-js.Word.Paragraph.listItem'
      - '@microsoft/office-js.Word.Paragraph.listItemOrNullObject'
      - '@microsoft/office-js.Word.Paragraph.listOrNullObject'
      - '@microsoft/office-js.Word.Paragraph.load'
      - '@microsoft/office-js.Word.Paragraph.outlineLevel'
      - '@microsoft/office-js.Word.Paragraph.parentBody'
      - '@microsoft/office-js.Word.Paragraph.parentContentControl'
      - '@microsoft/office-js.Word.Paragraph.parentContentControlOrNullObject'
      - '@microsoft/office-js.Word.Paragraph.parentTable'
      - '@microsoft/office-js.Word.Paragraph.parentTableCell'
      - '@microsoft/office-js.Word.Paragraph.parentTableCellOrNullObject'
      - '@microsoft/office-js.Word.Paragraph.parentTableOrNullObject'
      - '@microsoft/office-js.Word.Paragraph.rightIndent'
      - '@microsoft/office-js.Word.Paragraph.search'
      - '@microsoft/office-js.Word.Paragraph.select'
      - '@microsoft/office-js.Word.Paragraph.set_1'
      - '@microsoft/office-js.Word.Paragraph.set'
      - '@microsoft/office-js.Word.Paragraph.spaceAfter'
      - '@microsoft/office-js.Word.Paragraph.spaceBefore'
      - '@microsoft/office-js.Word.Paragraph.split'
      - '@microsoft/office-js.Word.Paragraph.startNewList'
      - '@microsoft/office-js.Word.Paragraph.style'
      - '@microsoft/office-js.Word.Paragraph.styleBuiltIn'
      - '@microsoft/office-js.Word.Paragraph.tableNestingLevel'
      - '@microsoft/office-js.Word.Paragraph.text'
      - '@microsoft/office-js.Word.Paragraph.toJSON'
      - '@microsoft/office-js.Word.Paragraph.track'
      - '@microsoft/office-js.Word.Paragraph.untrack'
    langs:
      - typeScript
    type: class
    summary: >
      Represents a single paragraph in a selection, range, content control, or
      document body.

      [Api set: WordApi 1.1]
    extends:
      name: '@@microsoft/office-js.OfficeExtension.ClientObject'
    source:
      path: office.d.ts
      startLine: 16181
      remote:
        path: dist\office.d.ts
        repo: 'https://github.com/OfficeDev/office-js.git'
        branch: master
    package: '@microsoft/office-js'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.alignment'
    name: alignment
    fullName: alignment
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets or sets the alignment for a paragraph. The value can be 'left',
      'centered', 'right', or 'justified'.

      [Api set: WordApi 1.1]
    syntax:
      content: string alignment
      return:
        type:
          - string
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.attachToList'
    name: attachToList
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Lets the paragraph join an existing list at the specified level. Fails if
      the paragraph cannot join the list or if the paragraph is already a list
      item.

      [Api set: WordApi 1.3]
    syntax:
      content: 'function attachToList(listId: number, level: number)'
      parameters:
        - id: listId
          type:
            - number
          description: Required. The ID of an existing list.
        - id: level
          type:
            - number
          description: |
            Required. The level in the list.
      return:
        type:
          - '@@microsoft/office-js.Word.List'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.clear'
    name: clear
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Clears the contents of the paragraph object. The user can perform the undo
      operation on the cleared content.

      [Api set: WordApi 1.1]
    syntax:
      content: function clear()
      parameters: []
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.contentControls'
    name: contentControls
    fullName: contentControls
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the collection of content control objects in the paragraph.
      Read-only.

      [Api set: WordApi 1.1]
    syntax:
      content: ContentControlCollection contentControls
      return:
        type:
          - '@@microsoft/office-js.Word.ContentControlCollection'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.delete'
    name: delete
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Deletes the paragraph and its content from the document.
      [Api set: WordApi 1.1]
    syntax:
      content: function delete()
      parameters: []
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.detachFromList'
    name: detachFromList
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Moves this paragraph out of its list, if the paragraph is a list item.
      [Api set: WordApi 1.3]
    syntax:
      content: function detachFromList()
      parameters: []
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.firstLineIndent'
    name: firstLineIndent
    fullName: firstLineIndent
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets or sets the value, in points, for a first line or hanging indent. Use
      a positive value to set a first-line indent, and use a negative value to
      set a hanging indent.

      [Api set: WordApi 1.1]
    syntax:
      content: number firstLineIndent
      return:
        type:
          - number
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.font'
    name: font
    fullName: font
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the text format of the paragraph. Use this to get and set font name,
      size, color, and other properties. Read-only.

      [Api set: WordApi 1.1]
    syntax:
      content: Font font
      return:
        type:
          - '@@microsoft/office-js.Word.Font'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.getHtml'
    name: getHtml
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Gets the HTML representation of the paragraph object.
      [Api set: WordApi 1.1]
    syntax:
      content: function getHtml()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.OfficeExtension.ClientResult<string>'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.getNext'
    name: getNext
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Gets the next paragraph. Throws if the paragraph is the last one.
      [Api set: WordApi 1.3]
    syntax:
      content: function getNext()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.Paragraph'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.getNextOrNullObject'
    name: getNextOrNullObject
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Gets the next paragraph. Returns a null object if the paragraph is the
      last one.

      [Api set: WordApi 1.3]
    syntax:
      content: function getNextOrNullObject()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.Paragraph'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.getOoxml'
    name: getOoxml
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Gets the Office Open XML (OOXML) representation of the paragraph object.
      [Api set: WordApi 1.1]
    syntax:
      content: function getOoxml()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.OfficeExtension.ClientResult<string>'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.getPrevious'
    name: getPrevious
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Gets the previous paragraph. Throws if the paragraph is the first one.
      [Api set: WordApi 1.3]
    syntax:
      content: function getPrevious()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.Paragraph'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.getPreviousOrNullObject'
    name: getPreviousOrNullObject
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Gets the previous paragraph. Returns a null object if the paragraph is the
      first one.

      [Api set: WordApi 1.3]
    syntax:
      content: function getPreviousOrNullObject()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.Paragraph'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.getRange'
    name: getRange
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Gets the whole paragraph, or the starting or ending point of the
      paragraph, as a range.

      [Api set: WordApi 1.3]
    syntax:
      content: 'function getRange(rangeLocation?: string)'
      parameters:
        - id: rangeLocation
          type:
            - string
          description: >
            Optional. The range location can be 'Whole', 'Start', 'End', 'After'
            or 'Content'.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Word.Range'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.getTextRanges'
    name: getTextRanges
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Gets the text ranges in the paragraph by using punctuation marks and/or
      other ending marks.

      [Api set: WordApi 1.3]
    syntax:
      content: >-
        function getTextRanges(endingMarks: Array<string>, trimSpacing?:
        boolean)
      parameters:
        - id: endingMarks
          type:
            - Array<string>
          description: >-
            Required. The punctuation marks and/or other ending marks as an
            array of strings.
        - id: trimSpacing
          type:
            - boolean
          description: >
            Optional. Indicates whether to trim spacing characters (spaces,
            tabs, column breaks and paragraph end marks) from the start and end
            of the ranges returned in the range collection. Default is false
            which indicates that spacing characters at the start and end of the
            ranges are included in the range collection.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Word.RangeCollection'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.inlinePictures'
    name: inlinePictures
    fullName: inlinePictures
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the collection of inlinePicture objects in the paragraph. The
      collection does not include floating images. Read-only.

      [Api set: WordApi 1.1]
    syntax:
      content: InlinePictureCollection inlinePictures
      return:
        type:
          - '@@microsoft/office-js.Word.InlinePictureCollection'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.insertBreak'
    name: insertBreak
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Inserts a break at the specified location in the main document. The
      insertLocation value can be 'Before' or 'After'.

      [Api set: WordApi 1.1]
    syntax:
      content: 'function insertBreak(breakType: string, insertLocation: string)'
      parameters:
        - id: breakType
          type:
            - string
          description: Required. The break type to add to the document.
        - id: insertLocation
          type:
            - string
          description: |
            Required. The value can be 'Before' or 'After'.
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.insertContentControl'
    name: insertContentControl
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Wraps the paragraph object with a rich text content control.
      [Api set: WordApi 1.1]
    syntax:
      content: function insertContentControl()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.ContentControl'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.insertFileFromBase64'
    name: insertFileFromBase64
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Inserts a document into the paragraph at the specified location. The
      insertLocation value can be 'Replace', 'Start' or 'End'.

      [Api set: WordApi 1.1]
    syntax:
      content: >-
        function insertFileFromBase64(base64File: string, insertLocation:
        string)
      parameters:
        - id: base64File
          type:
            - string
          description: Required. The base64 encoded content of a .docx file.
        - id: insertLocation
          type:
            - string
          description: |
            Required. The value can be 'Replace', 'Start' or 'End'.
      return:
        type:
          - '@@microsoft/office-js.Word.Range'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.insertHtml'
    name: insertHtml
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Inserts HTML into the paragraph at the specified location. The
      insertLocation value can be 'Replace', 'Start' or 'End'.

      [Api set: WordApi 1.1]
    syntax:
      content: 'function insertHtml(html: string, insertLocation: string)'
      parameters:
        - id: html
          type:
            - string
          description: Required. The HTML to be inserted in the paragraph.
        - id: insertLocation
          type:
            - string
          description: |
            Required. The value can be 'Replace', 'Start' or 'End'.
      return:
        type:
          - '@@microsoft/office-js.Word.Range'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.insertInlinePictureFromBase64'
    name: insertInlinePictureFromBase64
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Inserts a picture into the paragraph at the specified location. The
      insertLocation value can be 'Replace', 'Start' or 'End'.

      [Api set: WordApi 1.1]
    syntax:
      content: >-
        function insertInlinePictureFromBase64(base64EncodedImage: string,
        insertLocation: string)
      parameters:
        - id: base64EncodedImage
          type:
            - string
          description: Required. The base64 encoded image to be inserted.
        - id: insertLocation
          type:
            - string
          description: |
            Required. The value can be 'Replace', 'Start' or 'End'.
      return:
        type:
          - '@@microsoft/office-js.Word.InlinePicture'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.insertOoxml'
    name: insertOoxml
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Inserts OOXML into the paragraph at the specified location. The
      insertLocation value can be 'Replace', 'Start' or 'End'.

      [Api set: WordApi 1.1]
    syntax:
      content: 'function insertOoxml(ooxml: string, insertLocation: string)'
      parameters:
        - id: ooxml
          type:
            - string
          description: Required. The OOXML to be inserted in the paragraph.
        - id: insertLocation
          type:
            - string
          description: |
            Required. The value can be 'Replace', 'Start' or 'End'.
      return:
        type:
          - '@@microsoft/office-js.Word.Range'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.insertParagraph'
    name: insertParagraph
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Inserts a paragraph at the specified location. The insertLocation value
      can be 'Before' or 'After'.

      [Api set: WordApi 1.1]
    syntax:
      content: 'function insertParagraph(paragraphText: string, insertLocation: string)'
      parameters:
        - id: paragraphText
          type:
            - string
          description: Required. The paragraph text to be inserted.
        - id: insertLocation
          type:
            - string
          description: |
            Required. The value can be 'Before' or 'After'.
      return:
        type:
          - '@@microsoft/office-js.Word.Paragraph'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.insertTable'
    name: insertTable
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Inserts a table with the specified number of rows and columns. The
      insertLocation value can be 'Before' or 'After'.

      [Api set: WordApi 1.3]
    syntax:
      content: >-
        function insertTable(rowCount: number, columnCount: number,
        insertLocation: string, values?: Array<Array<string>>)
      parameters:
        - id: rowCount
          type:
            - number
          description: Required. The number of rows in the table.
        - id: columnCount
          type:
            - number
          description: Required. The number of columns in the table.
        - id: insertLocation
          type:
            - string
          description: Required. The value can be 'Before' or 'After'.
        - id: values
          type:
            - Array<Array<string>>
          description: >
            Optional 2D array. Cells are filled if the corresponding strings are
            specified in the array.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Word.Table'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.insertText'
    name: insertText
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Inserts text into the paragraph at the specified location. The
      insertLocation value can be 'Replace', 'Start' or 'End'.

      [Api set: WordApi 1.1]
    syntax:
      content: 'function insertText(text: string, insertLocation: string)'
      parameters:
        - id: text
          type:
            - string
          description: Required. Text to be inserted.
        - id: insertLocation
          type:
            - string
          description: |
            Required. The value can be 'Replace', 'Start' or 'End'.
      return:
        type:
          - '@@microsoft/office-js.Word.Range'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.isLastParagraph'
    name: isLastParagraph
    fullName: isLastParagraph
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Indicates the paragraph is the last one inside its parent body. Read-only.
      [Api set: WordApi 1.3]
    syntax:
      content: boolean isLastParagraph
      return:
        type:
          - boolean
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.isListItem'
    name: isListItem
    fullName: isListItem
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Checks whether the paragraph is a list item. Read-only.
      [Api set: WordApi 1.3]
    syntax:
      content: boolean isListItem
      return:
        type:
          - boolean
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.leftIndent'
    name: leftIndent
    fullName: leftIndent
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets or sets the left indent value, in points, for the paragraph.
      [Api set: WordApi 1.1]
    syntax:
      content: number leftIndent
      return:
        type:
          - number
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.lineSpacing'
    name: lineSpacing
    fullName: lineSpacing
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets or sets the line spacing, in points, for the specified paragraph. In
      the Word UI, this value is divided by 12.

      [Api set: WordApi 1.1]
    syntax:
      content: number lineSpacing
      return:
        type:
          - number
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.lineUnitAfter'
    name: lineUnitAfter
    fullName: lineUnitAfter
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets or sets the amount of spacing, in grid lines. after the paragraph.
      [Api set: WordApi 1.1]
    syntax:
      content: number lineUnitAfter
      return:
        type:
          - number
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.lineUnitBefore'
    name: lineUnitBefore
    fullName: lineUnitBefore
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets or sets the amount of spacing, in grid lines, before the paragraph.
      [Api set: WordApi 1.1]
    syntax:
      content: number lineUnitBefore
      return:
        type:
          - number
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.list'
    name: list
    fullName: list
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the List to which this paragraph belongs. Throws if the paragraph is
      not in a list. Read-only.

      [Api set: WordApi 1.3]
    syntax:
      content: List list
      return:
        type:
          - '@@microsoft/office-js.Word.List'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.listItem'
    name: listItem
    fullName: listItem
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the ListItem for the paragraph. Throws if the paragraph is not part
      of a list. Read-only.

      [Api set: WordApi 1.3]
    syntax:
      content: ListItem listItem
      return:
        type:
          - '@@microsoft/office-js.Word.ListItem'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.listItemOrNullObject'
    name: listItemOrNullObject
    fullName: listItemOrNullObject
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the ListItem for the paragraph. Returns a null object if the
      paragraph is not part of a list. Read-only.

      [Api set: WordApi 1.3]
    syntax:
      content: ListItem listItemOrNullObject
      return:
        type:
          - '@@microsoft/office-js.Word.ListItem'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.listOrNullObject'
    name: listOrNullObject
    fullName: listOrNullObject
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the List to which this paragraph belongs. Returns a null object if
      the paragraph is not in a list. Read-only.

      [Api set: WordApi 1.3]
    syntax:
      content: List listOrNullObject
      return:
        type:
          - '@@microsoft/office-js.Word.List'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.load'
    name: load
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Queues up a command to load the specified properties of the object. You
      must call "context.sync()" before reading the properties.
    syntax:
      content: 'function load(option?: string |  | LoadOption)'
      parameters:
        - id: option
          type:
            - string |  | LoadOption
          description: ''
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Word.Paragraph'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.outlineLevel'
    name: outlineLevel
    fullName: outlineLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets or sets the outline level for the paragraph.
      [Api set: WordApi 1.1]
    syntax:
      content: number outlineLevel
      return:
        type:
          - number
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.parentBody'
    name: parentBody
    fullName: parentBody
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets the parent body of the paragraph. Read-only.
      [Api set: WordApi 1.3]
    syntax:
      content: Body parentBody
      return:
        type:
          - '@@microsoft/office-js.Word.Body'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.parentContentControl'
    name: parentContentControl
    fullName: parentContentControl
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the content control that contains the paragraph. Throws if there
      isn't a parent content control. Read-only.

      [Api set: WordApi 1.1]
    syntax:
      content: ContentControl parentContentControl
      return:
        type:
          - '@@microsoft/office-js.Word.ContentControl'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.parentContentControlOrNullObject'
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the content control that contains the paragraph. Returns a null
      object if there isn't a parent content control. Read-only.

      [Api set: WordApi 1.3]
    syntax:
      content: ContentControl parentContentControlOrNullObject
      return:
        type:
          - '@@microsoft/office-js.Word.ContentControl'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.parentTable'
    name: parentTable
    fullName: parentTable
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the table that contains the paragraph. Throws if it is not contained
      in a table. Read-only.

      [Api set: WordApi 1.3]
    syntax:
      content: Table parentTable
      return:
        type:
          - '@@microsoft/office-js.Word.Table'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.parentTableCell'
    name: parentTableCell
    fullName: parentTableCell
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the table cell that contains the paragraph. Throws if it is not
      contained in a table cell. Read-only.

      [Api set: WordApi 1.3]
    syntax:
      content: TableCell parentTableCell
      return:
        type:
          - '@@microsoft/office-js.Word.TableCell'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.parentTableCellOrNullObject'
    name: parentTableCellOrNullObject
    fullName: parentTableCellOrNullObject
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the table cell that contains the paragraph. Returns a null object if
      it is not contained in a table cell. Read-only.

      [Api set: WordApi 1.3]
    syntax:
      content: TableCell parentTableCellOrNullObject
      return:
        type:
          - '@@microsoft/office-js.Word.TableCell'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.parentTableOrNullObject'
    name: parentTableOrNullObject
    fullName: parentTableOrNullObject
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the table that contains the paragraph. Returns a null object if it is
      not contained in a table. Read-only.

      [Api set: WordApi 1.3]
    syntax:
      content: Table parentTableOrNullObject
      return:
        type:
          - '@@microsoft/office-js.Word.Table'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.rightIndent'
    name: rightIndent
    fullName: rightIndent
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets or sets the right indent value, in points, for the paragraph.
      [Api set: WordApi 1.1]
    syntax:
      content: number rightIndent
      return:
        type:
          - number
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.search'
    name: search
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Performs a search with the specified searchOptions on the scope of the
      paragraph object. The search results are a collection of range objects.

      [Api set: WordApi 1.1]
    syntax:
      content: 'function search(searchText: string, searchOptions?: SearchOptions | )'
      parameters:
        - id: searchText
          type:
            - string
          description: Required. The search text.
        - id: searchOptions
          type:
            - 'SearchOptions | '
          description: |
            Optional. Options for the search.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Word.RangeCollection'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.select'
    name: select
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Selects and navigates the Word UI to the paragraph.
      [Api set: WordApi 1.1]
    syntax:
      content: 'function select(selectionMode?: string)'
      parameters:
        - id: selectionMode
          type:
            - string
          description: >
            Optional. The selection mode can be 'Select', 'Start' or 'End'.
            'Select' is the default.
          optional: true
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.set_1'
    name: set
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets multiple properties on the object at the same time, based on JSON
      input.
    syntax:
      content: 'function set(properties: Paragraph)'
      parameters:
        - id: properties
          type:
            - '@@microsoft/office-js.Word.Paragraph'
          description: ''
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.set'
    name: set
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets multiple properties on the object at the same time, based on JSON
      input.
    syntax:
      content: 'function set(properties: ParagraphUpdateData, options?: function)'
      parameters:
        - id: properties
          type:
            - '@@microsoft/office-js.Word.Word.Interfaces.ParagraphUpdateData'
          description: ''
        - id: options
          type:
            - function
          description: ''
          optional: true
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.spaceAfter'
    name: spaceAfter
    fullName: spaceAfter
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets or sets the spacing, in points, after the paragraph.
      [Api set: WordApi 1.1]
    syntax:
      content: number spaceAfter
      return:
        type:
          - number
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.spaceBefore'
    name: spaceBefore
    fullName: spaceBefore
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets or sets the spacing, in points, before the paragraph.
      [Api set: WordApi 1.1]
    syntax:
      content: number spaceBefore
      return:
        type:
          - number
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.split'
    name: split
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Splits the paragraph into child ranges by using delimiters.
      [Api set: WordApi 1.3]
    syntax:
      content: >-
        function split(delimiters: Array<string>, trimDelimiters?: boolean,
        trimSpacing?: boolean)
      parameters:
        - id: delimiters
          type:
            - Array<string>
          description: Required. The delimiters as an array of strings.
        - id: trimDelimiters
          type:
            - boolean
          description: >-
            Optional. Indicates whether to trim delimiters from the ranges in
            the range collection. Default is false which indicates that the
            delimiters are included in the ranges returned in the range
            collection.
          optional: true
        - id: trimSpacing
          type:
            - boolean
          description: >
            Optional. Indicates whether to trim spacing characters (spaces,
            tabs, column breaks and paragraph end marks) from the start and end
            of the ranges returned in the range collection. Default is false
            which indicates that spacing characters at the start and end of the
            ranges are included in the range collection.
          optional: true
      return:
        type:
          - '@@microsoft/office-js.Word.RangeCollection'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.startNewList'
    name: startNewList
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Starts a new list with this paragraph. Fails if the paragraph is already a
      list item.

      [Api set: WordApi 1.3]
    syntax:
      content: function startNewList()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.List'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.style'
    name: style
    fullName: style
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets or sets the style name for the paragraph. Use this property for
      custom styles and localized style names. To use the built-in styles that
      are portable between locales, see the "styleBuiltIn" property.

      [Api set: WordApi 1.1]
    syntax:
      content: string style
      return:
        type:
          - string
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.styleBuiltIn'
    name: styleBuiltIn
    fullName: styleBuiltIn
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets or sets the built-in style name for the paragraph. Use this property
      for built-in styles that are portable between locales. To use custom
      styles or localized style names, see the "style" property.

      [Api set: WordApi 1.3]
    syntax:
      content: string styleBuiltIn
      return:
        type:
          - string
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.tableNestingLevel'
    name: tableNestingLevel
    fullName: tableNestingLevel
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Gets the level of the paragraph's table. It returns 0 if the paragraph is
      not in a table. Read-only.

      [Api set: WordApi 1.3]
    syntax:
      content: number tableNestingLevel
      return:
        type:
          - number
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.text'
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: |
      Gets the text of the paragraph. Read-only.
      [Api set: WordApi 1.1]
    syntax:
      content: string text
      return:
        type:
          - string
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.toJSON'
    name: toJSON
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toJSON()
      parameters: []
      return:
        type:
          - function
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.track'
    name: track
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Track the object for automatic adjustment based on surrounding changes in
      the document. This call is a shorthand for
      context.trackedObjects.add(thisObject). If you are using this object
      across ".sync" calls and outside the sequential execution of a ".run"
      batch, and get an "InvalidObjectPath" error when setting a property or
      invoking a method on the object, you needed to have added the object to
      the tracked object collection when the object was first created.
    syntax:
      content: function track()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.Paragraph'
    module: Word
  - uid: '@microsoft/office-js.Word.Paragraph.untrack'
    name: untrack
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Release the memory associated with this object, if it has previously been
      tracked. This call is shorthand for
      context.trackedObjects.remove(thisObject). Having many tracked objects
      slows down the host application, so please remember to free any objects
      you add, once you're done using them. You will need to call
      "context.sync()" before the memory release takes effect.
    syntax:
      content: function untrack()
      parameters: []
      return:
        type:
          - '@@microsoft/office-js.Word.Paragraph'
    module: Word
