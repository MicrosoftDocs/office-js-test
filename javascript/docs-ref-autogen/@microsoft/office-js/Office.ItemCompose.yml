### YamlMime:UniversalReference
items:
  - uid: '@microsoft/office-js.Office.ItemCompose'
    name: ItemCompose
    fullName: ItemCompose
    children:
      - '@microsoft/office-js.Office.ItemCompose.addFileAttachmentAsync'
      - '@microsoft/office-js.Office.ItemCompose.addItemAttachmentAsync'
      - '@microsoft/office-js.Office.ItemCompose.close'
      - '@microsoft/office-js.Office.ItemCompose.getSelectedDataAsync'
      - '@microsoft/office-js.Office.ItemCompose.removeAttachmentAsync'
      - '@microsoft/office-js.Office.ItemCompose.saveAsync'
      - '@microsoft/office-js.Office.ItemCompose.setSelectedDataAsync'
      - '@microsoft/office-js.Office.ItemCompose.subject'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@@microsoft/office-js.Office.Item'
    source:
      path: office.d.ts
      startLine: 1775
      remote:
        path: dist\office.d.ts
        repo: 'https://github.com/OfficeDev/office-js.git'
        branch: master
    package: '@microsoft/office-js'
    module: Office
  - uid: '@microsoft/office-js.Office.ItemCompose.addFileAttachmentAsync'
    name: addFileAttachmentAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: Adds a file to a message as an attachment
    syntax:
      content: >-
        function addFileAttachmentAsync(uri: string, attachmentName: string,
        options?: AsyncContextOptions, callback?: (result: AsyncResult) => void)
      parameters:
        - id: uri
          type:
            - string
          description: >-
            The URI that provides the location of the file to attach to the
            message. The maximum length is 2048 characters
        - id: attachmentName
          type:
            - string
          description: >-
            The name of the attachment that is shown while the attachment is
            uploading. The maximum length is 255 characters
        - id: options
          type:
            - '@@microsoft/office-js.Office.AsyncContextOptions'
          description: Any optional parameters or state data passed to the method
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: |
            The optional callback method
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.ItemCompose.addItemAttachmentAsync'
    name: addItemAttachmentAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Adds an Exchange item, such as a message, as an attachment to the message'
    syntax:
      content: >-
        function addItemAttachmentAsync(itemId: any, attachmentName: string,
        options?: AsyncContextOptions, callback?: (result: AsyncResult) => void)
      parameters:
        - id: itemId
          type:
            - any
          description: >-
            The Exchange identifier of the item to attach. The maximum length is
            100 characters
        - id: attachmentName
          type:
            - string
          description: >-
            The name of the attachment that is shown while the attachment is
            uploading. The maximum length is 255 characters
        - id: options
          type:
            - '@@microsoft/office-js.Office.AsyncContextOptions'
          description: Any optional parameters or state data passed to the method
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: |
            The optional callback method
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.ItemCompose.close'
    name: close
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Closes the current item that is being composed

      The behaviors of the close method depends on the current state of the item
      being composed. If the item has unsaved changes, the client

      prompts the user to save, discard, or close the action.


      In the Outlook desktop client, if the message is an inline reply, the
      close method has no effect.
    syntax:
      content: function close()
      parameters: []
    module: Office
  - uid: '@microsoft/office-js.Office.ItemCompose.getSelectedDataAsync'
    name: getSelectedDataAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Asynchronously returns selected data from the subject or body of a
      message.

      If there is no selection but the cursor is in the body or the subject, the
      method returns null for the selected data. If a field other

      than the body or subject is selected, the method returns the
      InvalidSelection error
    syntax:
      content: >-
        function getSelectedDataAsync(coercionType: CoercionType, options?:
        AsyncContextOptions, callback?: (result: AsyncResult) => void)
      parameters:
        - id: coercionType
          type:
            - '@@microsoft/office-js.Office.CoercionType'
          description: ''
        - id: options
          type:
            - '@@microsoft/office-js.Office.AsyncContextOptions'
          description: ''
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: ''
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.ItemCompose.removeAttachmentAsync'
    name: removeAttachmentAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: Removes an attachment from a message
    syntax:
      content: >-
        function removeAttachmentAsync(attachmentIndex: string, options?:
        AsyncContextOptions, callback?: (result: AsyncResult) => void)
      parameters:
        - id: attachmentIndex
          type:
            - string
          description: >-
            The index of the attachment to remove. The maximum length of the
            string is 100 characters
        - id: options
          type:
            - '@@microsoft/office-js.Office.AsyncContextOptions'
          description: Any optional parameters or state data passed to the method
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: |
            The optional callback method
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.ItemCompose.saveAsync'
    name: saveAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Asynchronously saves an item.

      When invoked, this method saves the current message as a draft and returns
      the item id via the callback method. In Outlook Web App or

      Outlook in online mode, the item is saved to the server. In Outlook in
      cached mode, the item is saved to the local cache.
    syntax:
      content: >-
        function saveAsync(options?: AsyncContextOptions, callback?: (result:
        AsyncResult) => void)
      parameters:
        - id: options
          type:
            - '@@microsoft/office-js.Office.AsyncContextOptions'
          description: ''
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: ''
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.ItemCompose.setSelectedDataAsync'
    name: setSelectedDataAsync
    children: []
    type: method
    langs:
      - typeScript
    summary: Asynchronously inserts data into the body or subject of a message.
    syntax:
      content: >-
        function setSelectedDataAsync(data: string, options?: function,
        callback?: (result: AsyncResult) => void)
      parameters:
        - id: data
          type:
            - string
          description: ''
        - id: options
          type:
            - function
          description: ''
          optional: true
        - id: callback
          type:
            - '(result: AsyncResult) => void'
          description: ''
          optional: true
    module: Office
  - uid: '@microsoft/office-js.Office.ItemCompose.subject'
    name: subject
    fullName: subject
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Subject subject
      return:
        type:
          - '@@microsoft/office-js.Office.Subject'
    module: Office
